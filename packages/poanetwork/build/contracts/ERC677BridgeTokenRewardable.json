{
  "contractName": "ERC677BridgeTokenRewardable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "removeBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "result",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "bridgePointers",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockRewardContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isBridge",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "name": "_expiry",
          "type": "uint256"
        },
        {
          "name": "_allowed",
          "type": "bool"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridge",
          "type": "address"
        }
      ],
      "name": "addBridge",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeList",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "push",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "move",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PERMIT_TYPEHASH_LEGACY",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "F_ADDR",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_holder",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_deadline",
          "type": "uint256"
        },
        {
          "name": "_v",
          "type": "uint8"
        },
        {
          "name": "_r",
          "type": "bytes32"
        },
        {
          "name": "_s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stakingContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "pull",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeCount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "expirations",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "name": "_chainId",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "bridge",
          "type": "address"
        }
      ],
      "name": "BridgeRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_blockRewardContract",
          "type": "address"
        }
      ],
      "name": "setBlockRewardContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_stakingContract",
          "type": "address"
        }
      ],
      "name": "setStakingContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mintReward",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_staker",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"removeBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mintingFinished\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"setBridgeContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_blockRewardContract\",\"type\":\"address\"}],\"name\":\"setBlockRewardContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"result\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"bridgePointers\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockRewardContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"isBridge\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"finishMinting\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokenInterfacesVersion\",\"outputs\":[{\"name\":\"major\",\"type\":\"uint64\"},{\"name\":\"minor\",\"type\":\"uint64\"},{\"name\":\"patch\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_nonce\",\"type\":\"uint256\"},{\"name\":\"_expiry\",\"type\":\"uint256\"},{\"name\":\"_allowed\",\"type\":\"bool\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mintReward\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_bridge\",\"type\":\"address\"}],\"name\":\"addBridge\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeList\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_stakingContract\",\"type\":\"address\"}],\"name\":\"setStakingContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_staker\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH_LEGACY\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"F_ADDR\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_holder\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_deadline\",\"type\":\"uint256\"},{\"name\":\"_v\",\"type\":\"uint8\"},{\"name\":\"_r\",\"type\":\"bytes32\"},{\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stakingContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"bridgeCount\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"expirations\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"},{\"name\":\"_symbol\",\"type\":\"string\"},{\"name\":\"_decimals\",\"type\":\"uint8\"},{\"name\":\"_chainId\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"bridge\",\"type\":\"address\"}],\"name\":\"BridgeRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"MintFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"addBridge(address)\":{\"details\":\"Adds one more bridge contract into the list\",\"params\":{\"_bridge\":\"bridge contract address\"}},\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"_owner\":\"address The address which owns the funds.\",\"_spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\",\"params\":{\"_to\":\"The address which will spend the funds.\",\"_value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"_owner\":\"The address to query the the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"bridgeContract()\":{\"details\":\"Removes unused getter from ERC677BridgeToken contract\"},\"bridgeList()\":{\"details\":\"Returns all recorded bridge contract addresses\",\"return\":\"address[] bridge contract addresses\"},\"burn(uint256)\":{\"details\":\"Burns a specific amount of tokens.\",\"params\":{\"_value\":\"The amount of token to be burned.\"}},\"claimTokens(address,address)\":{\"details\":\"Withdraws the erc20 tokens or native coins from this contract.\",\"params\":{\"_to\":\"address of the tokens/coins receiver.\",\"_token\":\"address of the claimed token or address(0) for native coins.\"}},\"decreaseApproval(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_spender\":\"The address which will spend the funds.\",\"_subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to spender by the caller.\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_to\":\"The address which will spend the funds.\"}},\"increaseApproval(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol\",\"params\":{\"_addedValue\":\"The amount of tokens to increase the allowance by.\",\"_spender\":\"The address which will spend the funds.\"}},\"isBridge(address)\":{\"details\":\"Checks if given address is included into bridge contracts list\",\"params\":{\"_address\":\"bridge contract address\"},\"return\":\"bool true, if given address is a known bridge contract \"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"_amount\":\"The amount of tokens to mint.\",\"_to\":\"The address that will receive the minted tokens.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"move(address,address,uint256)\":{\"details\":\"An alias for `transferFrom` function.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_from\":\"The address of the sender.\",\"_to\":\"The address of the recipient.\"}},\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"Allows to spend holder's unlimited amount by the specified spender. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.\",\"params\":{\"_allowed\":\"True to enable unlimited allowance for the spender by the holder. False to disable.\",\"_expiry\":\"The allowance expiration date (unix timestamp in UTC). Can be zero for no expiration. Forced to zero if `_allowed` is `false`. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.\",\"_holder\":\"The holder's address.\",\"_nonce\":\"The nonce taken from `nonces(_holder)` public getter.\",\"_r\":\"The first 32 bytes of signature (ECDSA component).\",\"_s\":\"The second 32 bytes of signature (ECDSA component).\",\"_spender\":\"The spender's address.\",\"_v\":\"A final byte of signature (ECDSA component).\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Allows to spend holder's unlimited amount by the specified spender according to EIP2612. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.\",\"params\":{\"_deadline\":\"The deadline timestamp to call the permit function. Must be a timestamp in the future. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.\",\"_holder\":\"The holder's address.\",\"_r\":\"The first 32 bytes of signature (ECDSA component).\",\"_s\":\"The second 32 bytes of signature (ECDSA component).\",\"_spender\":\"The spender's address.\",\"_v\":\"A final byte of signature (ECDSA component).\",\"_value\":\"Allowance value to set as a result of the call.\"}},\"pull(address,uint256)\":{\"details\":\"Makes a request to transfer the specified amount from the specified address to the caller's address.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_from\":\"The address of the holder.\"}},\"push(address,uint256)\":{\"details\":\"An alias for `transfer` function.\",\"params\":{\"_amount\":\"The value to transfer.\",\"_to\":\"The address of the recipient.\"}},\"removeBridge(address)\":{\"details\":\"Removes one existing bridge contract from the list\",\"params\":{\"_bridge\":\"bridge contract address\"}},\"setBlockRewardContract(address)\":{\"details\":\"Updates the address of the used block reward contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used block reward contract. In this case users of the old contract won't lose their accumulated rewards, they can proceed with the withdrawal by calling the old block reward contract directly.\",\"params\":{\"_blockRewardContract\":\"address of the new block reward contract.\"}},\"setBridgeContract(address)\":{\"details\":\"Removes unused function from ERC677BridgeToken contract\"},\"setStakingContract(address)\":{\"details\":\"Updates the address of the used staking contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used staking contract. In this case users of the old staking contract won't lose their tokens, they can proceed with the withdrawal by calling the old staking contract directly.\",\"params\":{\"_stakingContract\":\"address of the new staking contract.\"}},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ERC677BridgeTokenRewardable.sol\":\"ERC677BridgeTokenRewardable\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/AddressUtils.sol\":{\"keccak256\":\"0x5ed3dc711dbb34917afff3c753adf3b0580514d1339cfedaa5a73645d8ac9b56\",\"urls\":[\"bzzr://d597eeb695a3d64766453239e973ddd65994c258ab8d5cab0d90103033ce85fc\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xa1c5e1d9ebbf654d332ca8e7a5c04a6a6a9d142eeaab3b988c2c909c81a62bef\",\"urls\":[\"bzzr://d062fb4a1b6de1f036ee0e73364a2532c4757eb68e95dd8c5cbb2d17b8732c6a\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x84c7090c27cf3657b73d9e26b6b316975fa0bd233b8169f254de0c3b3acfaefc\",\"urls\":[\"bzzr://b983355647976c1daa5de581a1b6a41be9c5adc17cce257b8679649db78f8a11\"]},\"openzeppelin-solidity/contracts/token/ERC20/BasicToken.sol\":{\"keccak256\":\"0xdffdc2dfa309e52005c61eb8b736d2076cff33c4a132b91091091bdc94cf83f1\",\"urls\":[\"bzzr://f2a4fb0a2eafa756d47ccc08f63de8075c9756a4532b4ad05a073fcd6f42ac22\"]},\"openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\":{\"keccak256\":\"0x778b4d37fcf8c94acb52b3cf086f3a4ebc5da2b38672590294a371391cd44648\",\"urls\":[\"bzzr://826669d1888f24b726bbbd09cbd83f21461f1148d0291b27d2259d73ae641044\"]},\"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\":{\"keccak256\":\"0xa9927296145433fad9195e7ce0388d6f07cfeb6c1c45df07f1c800f4196dd272\",\"urls\":[\"bzzr://59df43cea2bdda3527bc27aa56ea1838ead92e1e6ebc8254034b619d6b97003e\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd5feb2643c87547e65b8d6f1af02539b1dee1ad53046945e237eaa8ba649c93b\",\"urls\":[\"bzzr://69768215a261b30a376a901b83b1e6716e3916c9fd791ac67450c283e62212ad\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Basic.sol\":{\"keccak256\":\"0x516a17244073b518096ced7c8c94924cb29746ef0a4b6cc6cde125ac0406a419\",\"urls\":[\"bzzr://7addb1b5cad767651b9bcd688ba5b08769c1f3b70a470e34752a7717756d090d\"]},\"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\":{\"keccak256\":\"0x08394b7d7e6327085c15e8b7652cc9f4f9ddf3a9c614d9c8c3a3cff04fb781bf\",\"urls\":[\"bzzr://a0d8fca9e3eb8900f618afce5012ba48c4c664ebb6bf8ac7536367120c43fde7\"]},\"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\":{\"keccak256\":\"0xf98b4a9eed5064ef6fa47c3250121cf03f4f6528a20706d7b99e6c1dc9c1bb98\",\"urls\":[\"bzzr://7979b5eadacec799f6337581fdecb2f925ffb0f320fda4402bda043af1cbe706\"]},\"project:/contracts/ERC677BridgeToken.sol\":{\"keccak256\":\"0x11987c2ebe23844839189769c931daa2a5a1b700b13c8a04b27683af76c1d4e8\",\"urls\":[\"bzzr://be4606ad97386a5d8a705e29a13d8327d71d959d7c4ba441b2a7989d42d720a2\"]},\"project:/contracts/ERC677BridgeTokenRewardable.sol\":{\"keccak256\":\"0x02d8df00bb8e0133e806c536b45b6d71c968e51d7ecab45aa02736d5a5cced92\",\"urls\":[\"bzzr://851081089be8c465652af7f0d0078474d4448b69402bd4dd306ca02de3a1d814\"]},\"project:/contracts/ERC677MultiBridgeToken.sol\":{\"keccak256\":\"0x815b1a19ba7fe0b95985e4da74f3227d1cc45441e88fd7a0ecd2154c97fa52e2\",\"urls\":[\"bzzr://a5a6ba4133c30dae81448db566e67aa3db6448cd0a39cc5d0ec75bdb9af8a908\"]},\"project:/contracts/PermittableToken.sol\":{\"keccak256\":\"0x8d122019560adb054d612b0bd1d7dbe99ac10a9f10ff9623f197423ba63141f2\",\"urls\":[\"bzzr://daa86fc077b397bdf654ff7a0870e8029d8cd85c5f35ccd34a46bec1e7932760\"]},\"project:/contracts/interfaces/ERC677.sol\":{\"keccak256\":\"0xa4252d5b9e3d1b536b6a5edce1b712530827fcc792438ca17fa60fb64d4463ca\",\"urls\":[\"bzzr://ca1db6e12bc9753410003682a5cb6ebfc87ee238e78ba4a3033f915c66c3c72b\"]},\"project:/contracts/interfaces/IBurnableMintableERC677Token.sol\":{\"keccak256\":\"0x74fd1c41330140ddd6dc29037ca04ee13a23a44c5c5b3c4ce284a99cc78484a1\",\"urls\":[\"bzzr://dff872387b862977ce1b000a31d08aaccb1ea3e43bf9b7403911841d1e3aabef\"]},\"project:/contracts/libraries/Address.sol\":{\"keccak256\":\"0x9d5d8f089aedf9dfa743c9bc66bc901db5da5be78892af178340800873e1c722\",\"urls\":[\"bzzr://97602c15f88d529b68d7929717afa75fd03cd0f23a1363c14cd263dbcc17599e\"]},\"project:/contracts/libraries/SafeERC20.sol\":{\"keccak256\":\"0xb1f0a33f17fee9d600a2269fecce80d79377af3aeb2922e903fe4e3b57dc0c4f\",\"urls\":[\"bzzr://e3b6f5e2a1e88e69d403cbf2925c92c662b4fe6ea28dee292948187203ac6c98\"]},\"project:/contracts/upgradeable_contracts/Claimable.sol\":{\"keccak256\":\"0xfe020277ad01d6e42674c0906fb33eeec54964e928208fdd7fc0ab68c2967773\",\"urls\":[\"bzzr://2d1d90cdfb9e0917f83bdfcc4f8398e3f035c4c62da4e79e81ad4c4252b1d979\"]},\"project:/contracts/upgradeable_contracts/Sacrifice.sol\":{\"keccak256\":\"0x2c8f9b5e39d33552cd16d3fdd84e58f2138042166ae9b351e97fe674f7e3f337\",\"urls\":[\"bzzr://a438edd320ea1fa8141d54002897c3a50cf6cb13b07b4088d01ffb099bb9e859\"]}},\"version\":1}",
  "bytecode": "0x60806040526006805460a060020a60ff02191690553480156200002157600080fd5b5060405162002a7438038062002a74833981016040908152815160208084015192840151606085015192850180519095949094019390929185918591859185918591859185918591859185918591849184918491620000869160009186019062000329565b5081516200009c90600190602085019062000329565b506002805460ff90921660ff19909216919091179055505060068054600160a060020a03191633179055505050801515620000d657600080fd5b60405180807f454950373132446f6d61696e28737472696e67206e616d652c737472696e672081526020017f76657273696f6e2c75696e7432353620636861696e49642c616464726573732081526020017f766572696679696e67436f6e747261637429000000000000000000000000000081525060520190506040518091039020846040518082805190602001908083835b602083106200018a5780518252601f19909201916020918201910162000169565b51815160209384036101000a600019018019909216911617905260408051929094018290038220828501855260018084527f3100000000000000000000000000000000000000000000000000000000000000928401928352945190965091945090928392508083835b60208310620002145780518252601f199092019160209182019101620001f3565b51815160209384036101000a6000190180199092169116179052604080519290940182900382208282019890985281840196909652606081019690965250608085018690523060a0808701919091528151808703909101815260c09095019081905284519093849350850191508083835b60208310620002a65780518252601f19909201916020918201910162000285565b51815160209384036101000a600019018019909216911617905260405191909301819003902060085550600160a060020a036000819052600b9091527fbd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b18054600160a060020a031916909117905550620003ce9c50505050505050505050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200036c57805160ff19168380011785556200039c565b828001600101855582156200039c579182015b828111156200039c5782518255916020019190600101906200037f565b50620003aa929150620003ae565b5090565b620003cb91905b80821115620003aa5760008155600101620003b5565b90565b61269680620003de6000396000f3006080604052600436106102375763ffffffff60e060020a60003504166304df017d811461023c57806305d2035b1461025f57806306fdde0314610288578063095ea7b3146103125780630b26cf661461033657806318160ddd1461035757806323b872dd1461037e57806327a3e16b146103a857806330adf81f146103c9578063313ce567146103de5780633644e51514610409578063395093511461041e5780634000aea01461044257806340c10f191461047357806342966c68146104975780634bcb88bc146104af57806354fd4d50146104ec57806356b54bae14610501578063661884631461051657806369ffa08a1461053a57806370a0823114610561578063715018a614610582578063726600ce146105975780637d64bcb4146105b85780637ecebe00146105cd578063859ba28c146105ee5780638da5cb5b1461062f5780638fcbaf0c1461064457806391c0aabf1461068257806395d89b411461069a5780639712fdf8146106af5780639da38e2f146106d05780639dd373b914610735578063a457c2d714610756578063a9059cbb1461077a578063adc9772e1461079e578063b753a98c146107c2578063bb35783b146107e6578063c6a1dedf14610810578063c794c76914610825578063cd5965831461083a578063d505accf1461084f578063d73dd62314610888578063dd62ed3e146108ac578063ee99205c146108d3578063f2d5d56b146108e8578063f2fde38b1461090c578063fbb2a53f1461092d578063ff9e884d14610942575b600080fd5b34801561024857600080fd5b5061025d600160a060020a0360043516610969565b005b34801561026b57600080fd5b50610274610ad5565b604080519115158252519081900360200190f35b34801561029457600080fd5b5061029d610af6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d75781810151838201526020016102bf565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031e57600080fd5b50610274600160a060020a0360043516602435610b84565b34801561034257600080fd5b5061025d600160a060020a0360043516610237565b34801561036357600080fd5b5061036c610b9a565b60408051918252519081900360200190f35b34801561038a57600080fd5b50610274600160a060020a0360043581169060243516604435610ba0565b3480156103b457600080fd5b5061025d600160a060020a0360043516610bec565b3480156103d557600080fd5b5061036c610c46565b3480156103ea57600080fd5b506103f3610c6a565b6040805160ff9092168252519081900360200190f35b34801561041557600080fd5b5061036c610c73565b34801561042a57600080fd5b50610274600160a060020a0360043516602435610c79565b34801561044e57600080fd5b5061027460048035600160a060020a0316906024803591604435918201910135610cba565b34801561047f57600080fd5b50610274600160a060020a0360043516602435610dcb565b3480156104a357600080fd5b5061025d600435610ed6565b3480156104bb57600080fd5b506104d0600160a060020a0360043516610ee3565b60408051600160a060020a039092168252519081900360200190f35b3480156104f857600080fd5b5061029d610efe565b34801561050d57600080fd5b506104d0610f35565b34801561052257600080fd5b50610274600160a060020a0360043516602435610f44565b34801561054657600080fd5b5061025d600160a060020a0360043581169060243516611021565b34801561056d57600080fd5b5061036c600160a060020a0360043516611046565b34801561058e57600080fd5b5061025d611061565b3480156105a357600080fd5b50610274600160a060020a0360043516611078565b3480156105c457600080fd5b506102746110b2565b3480156105d957600080fd5b5061036c600160a060020a03600435166110b9565b3480156105fa57600080fd5b506106036110cb565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561063b57600080fd5b506104d06110d6565b34801561065057600080fd5b5061025d600160a060020a0360043581169060243516604435606435608435151560ff60a4351660c43560e4356110e5565b34801561068e57600080fd5b5061025d600435611223565b3480156106a657600080fd5b5061029d61131d565b3480156106bb57600080fd5b5061025d600160a060020a0360043516611377565b3480156106dc57600080fd5b506106e5611497565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610721578181015183820152602001610709565b505050509050019250505060405180910390f35b34801561074157600080fd5b5061025d600160a060020a036004351661156c565b34801561076257600080fd5b50610274600160a060020a03600435166024356115d9565b34801561078657600080fd5b50610274600160a060020a03600435166024356115ec565b3480156107aa57600080fd5b5061025d600160a060020a036004351660243561162f565b3480156107ce57600080fd5b5061025d600160a060020a03600435166024356116f8565b3480156107f257600080fd5b5061025d600160a060020a0360043581169060243516604435611708565b34801561081c57600080fd5b5061036c611719565b34801561083157600080fd5b506104d061173d565b34801561084657600080fd5b506104d06110b2565b34801561085b57600080fd5b5061025d600160a060020a036004358116906024351660443560643560ff6084351660a43560c435611748565b34801561089457600080fd5b50610274600160a060020a0360043516602435611824565b3480156108b857600080fd5b5061036c600160a060020a03600435811690602435166118ab565b3480156108df57600080fd5b506104d06118d6565b3480156108f457600080fd5b5061025d600160a060020a03600435166024356118e5565b34801561091857600080fd5b5061025d600160a060020a03600435166118f0565b34801561093957600080fd5b5061036c611910565b34801561094e57600080fd5b5061036c600160a060020a0360043581169060243516611916565b60065460009081908190600160a060020a0316331461098757600080fd5b61099084611078565b151561099b57600080fd5b505050600160a060020a038082166000908152600b60205260408120549082905260008051602061260b83398151915254908216919081168015156109df57600080fd5b600160a060020a0381811690851614610a3a57600160a060020a038082166000908152600b6020526040902054919250908116908114801590610a2a5750600160a060020a03811615155b1515610a3557600080fd5b6109df565b600160a060020a038083166000908152600b6020526040808220805484881673ffffffffffffffffffffffffffffffffffffffff19918216179091559287168252902080549091169055600c54610a9890600163ffffffff61193316565b600c55604051600160a060020a038516907f5d9d5034656cb3ebfb0655057cd7f9b4077a9b42ff42ce223cbac5bc586d212690600090a250505050565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b505050505081565b6000610b91338484611945565b50600192915050565b60045490565b600d54600090600160a060020a0384811691161415610bbe57600080fd5b600e54600160a060020a0384811691161415610bd957600080fd5b610be4848484611987565b949350505050565b600654600160a060020a03163314610c0357600080fd5b610c0c81611b4f565b1515610c1757600080fd5b600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60025460ff1681565b60085481565b336000818152600560209081526040808320600160a060020a03871684529091528120549091610b91918590610cb5908663ffffffff611b5716565b611945565b600084600160a060020a03811615801590610cde5750600160a060020a0381163014155b1515610ce957600080fd5b610cf38686611b64565b1515610cfe57600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a3610d7386611b4f565b15610dbf57610db433878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611b70945050505050565b1515610dbf57600080fd5b50600195945050505050565b600654600090600160a060020a03163314610de557600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610e0d57600080fd5b600454610e20908363ffffffff611b5716565b600455600160a060020a038316600090815260036020526040902054610e4c908363ffffffff611b5716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a0385169160009160008051602061262b8339815191529181900360200190a350600192915050565b610ee03382611ced565b50565b600b60205260009081526040902054600160a060020a031681565b60408051808201909152600181527f3100000000000000000000000000000000000000000000000000000000000000602082015281565b600d54600160a060020a031681565b336000908152600560209081526040808320600160a060020a0386168452909152812054808310610f9857336000908152600560209081526040808320600160a060020a0388168452909152812055610fcd565b610fa8818463ffffffff61193316565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a03891680855290835292819020548151908152905192939260008051602061264b833981519152929181900390910190a35060019392505050565b600654600160a060020a0316331461103857600080fd5b6110428282611ddc565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461023757600080fd5b6000600160a060020a03828116148015906110ac5750600160a060020a038281166000908152600b60205260409020541615155b92915050565b6000806000fd5b60096020526000908152604090205481565b600260056000909192565b600654600160a060020a031681565b6000808615806110f55750864211155b151561110057600080fd5b604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020820152600160a060020a03808d16828401528b166060820152608081018a905260a0810189905287151560c0808301919091528251808303909101815260e090910190915261117590611e1a565b915061118382868686611f21565b600160a060020a038b811691161461119a57600080fd5b600160a060020a038a16600090815260096020526040902080546001810190915588146111c657600080fd5b856111d25760006111d6565b6000195b9050856111e45760006111e6565b865b600160a060020a03808c166000908152600a60209081526040808320938e16835292905220556112178a8a83612123565b50505050505050505050565b600d54600090600160a060020a0316331461123d57600080fd5b81151561124957611042565b50600d54600454600160a060020a039091169061126c908363ffffffff611b5716565b600455600160a060020a038116600090815260036020526040902054611298908363ffffffff611b5716565b600160a060020a038216600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a0383169160009160008051602061262b8339815191529181900360200190a35050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b600654600090600160a060020a0316331461139157600080fd5b600c546032116113a057600080fd5b6113a982611b4f565b15156113b457600080fd5b6113bd82611078565b156113c757600080fd5b50600160a060020a036000819052600b60205260008051602061260b83398151915254168015156113f757600080fd5b600b60205260008051602061260b833981519152805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038581169182179093556000908152604090208054909116918316919091179055600c5461145c906001611b57565b600c55604051600160a060020a038316907f3cda433c5679ae4c6a5dea50840e222a42cba3695e4663de4366be899348422190600090a25050565b606080600080600c546040519080825280602002602001820160405280156114c9578160200160208202803883390190505b50600160a060020a036000818152600b60205260008051602061260b83398151915254929550935016905080151561150057600080fd5b600160a060020a03818116146115645780838381518110151561151f57fe5b600160a060020a0392831660209182029092018101919091529181166000908152600b909252604090912054600192909201911680151561155f57600080fd5b611500565b509092915050565b600654600160a060020a0316331461158357600080fd5b61158c81611b4f565b151561159757600080fd5b6115a081611046565b156115aa57600080fd5b600e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60006115e58383610f44565b9392505050565b600d54600090600160a060020a038481169116141561160a57600080fd5b600e54600160a060020a038481169116141561162557600080fd5b6115e5838361227e565b600e54600160a060020a0316331461164657600080fd5b600160a060020a03821660009081526003602052604090205461166f908263ffffffff61193316565b600160a060020a0380841660009081526003602052604080822093909355600e54909116815220546116a7908263ffffffff611b5716565b600e8054600160a060020a0390811660009081526003602090815260409182902094909455915482518581529251908216939186169260008051602061262b83398151915292908290030190a35050565b611703338383610ba0565b505050565b611713838383610ba0565b50505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b600160a060020a0381565b6000804286101561175857600080fd5b600160a060020a03808a1660008181526009602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99281019290925281830193909352928b166060840152608083018a905260a0830182905260c08084018a90528151808503909101815260e0909301905292506117e990611e1a565b90506117f781868686611f21565b600160a060020a038a811691161461180e57600080fd5b611819898989611945565b505050505050505050565b336000908152600560209081526040808320600160a060020a0386168452909152812054611858908363ffffffff611b5716565b336000818152600560209081526040808320600160a060020a03891680855290835292819020859055805194855251919360008051602061264b833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600e54600160a060020a031681565b611703823383610ba0565b600654600160a060020a0316331461190757600080fd5b610ee0816122a0565b600c5481565b600a60209081526000928352604080842090915290825290205481565b60008282111561193f57fe5b50900390565b611950838383612123565b60001981141561170357600160a060020a038084166000908152600a60209081526040808320938616835292905290812055505050565b600080600160a060020a038516151561199f57600080fd5b600160a060020a03841615156119b457600080fd5b600160a060020a0385166000908152600360205260409020546119dd908463ffffffff61193316565b600160a060020a038087166000908152600360205260408082209390935590861681522054611a12908463ffffffff611b5716565b600160a060020a03808616600081815260036020908152604091829020949094558051878152905191939289169260008051602061262b83398151915292918290030190a3600160a060020a0385163314611b3957611a7185336118ab565b90506000198114611adb57611a8c818463ffffffff61193316565b600160a060020a03861660008181526005602090815260408083203380855290835292819020859055805194855251919360008051602061264b833981519152929081900390910190a3611b39565b600160a060020a0385166000908152600a602090815260408083203384529091529020541580611b2e5750600160a060020a0385166000908152600a602090815260408083203384529091529020544211155b1515611b3957600080fd5b611b4485858561231e565b506001949350505050565b6000903b1190565b818101828110156110ac57fe5b60006115e58383612355565b600083600160a060020a031663a4c0ed3660e060020a028685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611be8578181015183820152602001611bd0565b50505050905090810190601f168015611c155780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b83811015611ca3578181015183820152602001611c8b565b50505050905090810190601f168015611cd05780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b600160a060020a038216600090815260036020526040902054811115611d1257600080fd5b600160a060020a038216600090815260036020526040902054611d3b908263ffffffff61193316565b600160a060020a038316600090815260036020526040902055600454611d67908263ffffffff61193316565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a0385169160008051602061262b8339815191529181900360200190a35050565b80600160a060020a0381161515611df257600080fd5b600160a060020a0383161515611e1057611e0b82612424565b611703565b6117038383612430565b6000600854826040518082805190602001908083835b60208310611e4f5780518252601f199092019160209182019101611e30565b51815160209384036101000a6000190180199092169116179052604080519290940182900382207f190100000000000000000000000000000000000000000000000000000000000083830152602283019790975260428083019790975283518083039097018752606290910192839052855192945084935085019190508083835b60208310611eef5780518252601f199092019160209182019101611ed0565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912095945050505050565b6000808460ff16601b1480611f3957508460ff16601c145b1515611fb5576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612053576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051600080825260208083018085528a905260ff8916838501526060830188905260808301879052925160019360a0808501949193601f19840193928390039091019190865af11580156120ad573d6000803e3d6000fd5b5050604051601f190151915050600160a060020a038116151561211a576040805160e560020a62461bcd02815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b600160a060020a03831615156121a8576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038216151561222e576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038084166000818152600560209081526040808320948716808452948252918290208590558151858152915160008051602061264b8339815191529281900390910190a3505050565b600061228a8383611b64565b151561229557600080fd5b610b9133848461231e565b600160a060020a03811615156122b557600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61232782611078565b156117035760408051600081526020810190915261234a90849084908490611b70565b151561170357600080fd5b3360009081526003602052604081205482111561237157600080fd5b600160a060020a038316151561238657600080fd5b336000908152600360205260409020546123a6908363ffffffff61193316565b3360009081526003602052604080822092909255600160a060020a038516815220546123d8908363ffffffff611b5716565b600160a060020a03841660008181526003602090815260409182902093909355805185815290519192339260008051602061262b8339815191529281900390910190a350600192915050565b303161104282826124dd565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561249557600080fd5b505af11580156124a9573d6000803e3d6000fd5b505050506040513d60208110156124bf57600080fd5b50519050611713600160a060020a038516848363ffffffff61254516565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156110425780826125126125da565b600160a060020a039091168152604051908190036020019082f08015801561253e573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156125a857600080fd5b505af11580156125bc573d6000803e3d6000fd5b505050503d156117035760206000803e600051151561170357600080fd5b6040516021806125ea833901905600608060405260405160208060218339810160405251600160a060020a038116ff00bd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b1ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058200ee980fa646bfc8abd98737ca8f3bed33e34a2ba9dca20d7368c146312caef7c0029",
  "deployedBytecode": "0x6080604052600436106102375763ffffffff60e060020a60003504166304df017d811461023c57806305d2035b1461025f57806306fdde0314610288578063095ea7b3146103125780630b26cf661461033657806318160ddd1461035757806323b872dd1461037e57806327a3e16b146103a857806330adf81f146103c9578063313ce567146103de5780633644e51514610409578063395093511461041e5780634000aea01461044257806340c10f191461047357806342966c68146104975780634bcb88bc146104af57806354fd4d50146104ec57806356b54bae14610501578063661884631461051657806369ffa08a1461053a57806370a0823114610561578063715018a614610582578063726600ce146105975780637d64bcb4146105b85780637ecebe00146105cd578063859ba28c146105ee5780638da5cb5b1461062f5780638fcbaf0c1461064457806391c0aabf1461068257806395d89b411461069a5780639712fdf8146106af5780639da38e2f146106d05780639dd373b914610735578063a457c2d714610756578063a9059cbb1461077a578063adc9772e1461079e578063b753a98c146107c2578063bb35783b146107e6578063c6a1dedf14610810578063c794c76914610825578063cd5965831461083a578063d505accf1461084f578063d73dd62314610888578063dd62ed3e146108ac578063ee99205c146108d3578063f2d5d56b146108e8578063f2fde38b1461090c578063fbb2a53f1461092d578063ff9e884d14610942575b600080fd5b34801561024857600080fd5b5061025d600160a060020a0360043516610969565b005b34801561026b57600080fd5b50610274610ad5565b604080519115158252519081900360200190f35b34801561029457600080fd5b5061029d610af6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156102d75781810151838201526020016102bf565b50505050905090810190601f1680156103045780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561031e57600080fd5b50610274600160a060020a0360043516602435610b84565b34801561034257600080fd5b5061025d600160a060020a0360043516610237565b34801561036357600080fd5b5061036c610b9a565b60408051918252519081900360200190f35b34801561038a57600080fd5b50610274600160a060020a0360043581169060243516604435610ba0565b3480156103b457600080fd5b5061025d600160a060020a0360043516610bec565b3480156103d557600080fd5b5061036c610c46565b3480156103ea57600080fd5b506103f3610c6a565b6040805160ff9092168252519081900360200190f35b34801561041557600080fd5b5061036c610c73565b34801561042a57600080fd5b50610274600160a060020a0360043516602435610c79565b34801561044e57600080fd5b5061027460048035600160a060020a0316906024803591604435918201910135610cba565b34801561047f57600080fd5b50610274600160a060020a0360043516602435610dcb565b3480156104a357600080fd5b5061025d600435610ed6565b3480156104bb57600080fd5b506104d0600160a060020a0360043516610ee3565b60408051600160a060020a039092168252519081900360200190f35b3480156104f857600080fd5b5061029d610efe565b34801561050d57600080fd5b506104d0610f35565b34801561052257600080fd5b50610274600160a060020a0360043516602435610f44565b34801561054657600080fd5b5061025d600160a060020a0360043581169060243516611021565b34801561056d57600080fd5b5061036c600160a060020a0360043516611046565b34801561058e57600080fd5b5061025d611061565b3480156105a357600080fd5b50610274600160a060020a0360043516611078565b3480156105c457600080fd5b506102746110b2565b3480156105d957600080fd5b5061036c600160a060020a03600435166110b9565b3480156105fa57600080fd5b506106036110cb565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561063b57600080fd5b506104d06110d6565b34801561065057600080fd5b5061025d600160a060020a0360043581169060243516604435606435608435151560ff60a4351660c43560e4356110e5565b34801561068e57600080fd5b5061025d600435611223565b3480156106a657600080fd5b5061029d61131d565b3480156106bb57600080fd5b5061025d600160a060020a0360043516611377565b3480156106dc57600080fd5b506106e5611497565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610721578181015183820152602001610709565b505050509050019250505060405180910390f35b34801561074157600080fd5b5061025d600160a060020a036004351661156c565b34801561076257600080fd5b50610274600160a060020a03600435166024356115d9565b34801561078657600080fd5b50610274600160a060020a03600435166024356115ec565b3480156107aa57600080fd5b5061025d600160a060020a036004351660243561162f565b3480156107ce57600080fd5b5061025d600160a060020a03600435166024356116f8565b3480156107f257600080fd5b5061025d600160a060020a0360043581169060243516604435611708565b34801561081c57600080fd5b5061036c611719565b34801561083157600080fd5b506104d061173d565b34801561084657600080fd5b506104d06110b2565b34801561085b57600080fd5b5061025d600160a060020a036004358116906024351660443560643560ff6084351660a43560c435611748565b34801561089457600080fd5b50610274600160a060020a0360043516602435611824565b3480156108b857600080fd5b5061036c600160a060020a03600435811690602435166118ab565b3480156108df57600080fd5b506104d06118d6565b3480156108f457600080fd5b5061025d600160a060020a03600435166024356118e5565b34801561091857600080fd5b5061025d600160a060020a03600435166118f0565b34801561093957600080fd5b5061036c611910565b34801561094e57600080fd5b5061036c600160a060020a0360043581169060243516611916565b60065460009081908190600160a060020a0316331461098757600080fd5b61099084611078565b151561099b57600080fd5b505050600160a060020a038082166000908152600b60205260408120549082905260008051602061260b83398151915254908216919081168015156109df57600080fd5b600160a060020a0381811690851614610a3a57600160a060020a038082166000908152600b6020526040902054919250908116908114801590610a2a5750600160a060020a03811615155b1515610a3557600080fd5b6109df565b600160a060020a038083166000908152600b6020526040808220805484881673ffffffffffffffffffffffffffffffffffffffff19918216179091559287168252902080549091169055600c54610a9890600163ffffffff61193316565b600c55604051600160a060020a038516907f5d9d5034656cb3ebfb0655057cd7f9b4077a9b42ff42ce223cbac5bc586d212690600090a250505050565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b820191906000526020600020905b815481529060010190602001808311610b5f57829003601f168201915b505050505081565b6000610b91338484611945565b50600192915050565b60045490565b600d54600090600160a060020a0384811691161415610bbe57600080fd5b600e54600160a060020a0384811691161415610bd957600080fd5b610be4848484611987565b949350505050565b600654600160a060020a03163314610c0357600080fd5b610c0c81611b4f565b1515610c1757600080fd5b600d805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b60025460ff1681565b60085481565b336000818152600560209081526040808320600160a060020a03871684529091528120549091610b91918590610cb5908663ffffffff611b5716565b611945565b600084600160a060020a03811615801590610cde5750600160a060020a0381163014155b1515610ce957600080fd5b610cf38686611b64565b1515610cfe57600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a3610d7386611b4f565b15610dbf57610db433878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750611b70945050505050565b1515610dbf57600080fd5b50600195945050505050565b600654600090600160a060020a03163314610de557600080fd5b60065474010000000000000000000000000000000000000000900460ff1615610e0d57600080fd5b600454610e20908363ffffffff611b5716565b600455600160a060020a038316600090815260036020526040902054610e4c908363ffffffff611b5716565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a0385169160009160008051602061262b8339815191529181900360200190a350600192915050565b610ee03382611ced565b50565b600b60205260009081526040902054600160a060020a031681565b60408051808201909152600181527f3100000000000000000000000000000000000000000000000000000000000000602082015281565b600d54600160a060020a031681565b336000908152600560209081526040808320600160a060020a0386168452909152812054808310610f9857336000908152600560209081526040808320600160a060020a0388168452909152812055610fcd565b610fa8818463ffffffff61193316565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a03891680855290835292819020548151908152905192939260008051602061264b833981519152929181900390910190a35060019392505050565b600654600160a060020a0316331461103857600080fd5b6110428282611ddc565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461023757600080fd5b6000600160a060020a03828116148015906110ac5750600160a060020a038281166000908152600b60205260409020541615155b92915050565b6000806000fd5b60096020526000908152604090205481565b600260056000909192565b600654600160a060020a031681565b6000808615806110f55750864211155b151561110057600080fd5b604080517fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb6020820152600160a060020a03808d16828401528b166060820152608081018a905260a0810189905287151560c0808301919091528251808303909101815260e090910190915261117590611e1a565b915061118382868686611f21565b600160a060020a038b811691161461119a57600080fd5b600160a060020a038a16600090815260096020526040902080546001810190915588146111c657600080fd5b856111d25760006111d6565b6000195b9050856111e45760006111e6565b865b600160a060020a03808c166000908152600a60209081526040808320938e16835292905220556112178a8a83612123565b50505050505050505050565b600d54600090600160a060020a0316331461123d57600080fd5b81151561124957611042565b50600d54600454600160a060020a039091169061126c908363ffffffff611b5716565b600455600160a060020a038116600090815260036020526040902054611298908363ffffffff611b5716565b600160a060020a038216600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a0383169160009160008051602061262b8339815191529181900360200190a35050565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b7c5780601f10610b5157610100808354040283529160200191610b7c565b600654600090600160a060020a0316331461139157600080fd5b600c546032116113a057600080fd5b6113a982611b4f565b15156113b457600080fd5b6113bd82611078565b156113c757600080fd5b50600160a060020a036000819052600b60205260008051602061260b83398151915254168015156113f757600080fd5b600b60205260008051602061260b833981519152805473ffffffffffffffffffffffffffffffffffffffff19908116600160a060020a038581169182179093556000908152604090208054909116918316919091179055600c5461145c906001611b57565b600c55604051600160a060020a038316907f3cda433c5679ae4c6a5dea50840e222a42cba3695e4663de4366be899348422190600090a25050565b606080600080600c546040519080825280602002602001820160405280156114c9578160200160208202803883390190505b50600160a060020a036000818152600b60205260008051602061260b83398151915254929550935016905080151561150057600080fd5b600160a060020a03818116146115645780838381518110151561151f57fe5b600160a060020a0392831660209182029092018101919091529181166000908152600b909252604090912054600192909201911680151561155f57600080fd5b611500565b509092915050565b600654600160a060020a0316331461158357600080fd5b61158c81611b4f565b151561159757600080fd5b6115a081611046565b156115aa57600080fd5b600e805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60006115e58383610f44565b9392505050565b600d54600090600160a060020a038481169116141561160a57600080fd5b600e54600160a060020a038481169116141561162557600080fd5b6115e5838361227e565b600e54600160a060020a0316331461164657600080fd5b600160a060020a03821660009081526003602052604090205461166f908263ffffffff61193316565b600160a060020a0380841660009081526003602052604080822093909355600e54909116815220546116a7908263ffffffff611b5716565b600e8054600160a060020a0390811660009081526003602090815260409182902094909455915482518581529251908216939186169260008051602061262b83398151915292908290030190a35050565b611703338383610ba0565b505050565b611713838383610ba0565b50505050565b7fea2aa0a1be11a07ed86d755c93467f4f82362b452371d1ba94d1715123511acb81565b600160a060020a0381565b6000804286101561175857600080fd5b600160a060020a03808a1660008181526009602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c99281019290925281830193909352928b166060840152608083018a905260a0830182905260c08084018a90528151808503909101815260e0909301905292506117e990611e1a565b90506117f781868686611f21565b600160a060020a038a811691161461180e57600080fd5b611819898989611945565b505050505050505050565b336000908152600560209081526040808320600160a060020a0386168452909152812054611858908363ffffffff611b5716565b336000818152600560209081526040808320600160a060020a03891680855290835292819020859055805194855251919360008051602061264b833981519152929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600e54600160a060020a031681565b611703823383610ba0565b600654600160a060020a0316331461190757600080fd5b610ee0816122a0565b600c5481565b600a60209081526000928352604080842090915290825290205481565b60008282111561193f57fe5b50900390565b611950838383612123565b60001981141561170357600160a060020a038084166000908152600a60209081526040808320938616835292905290812055505050565b600080600160a060020a038516151561199f57600080fd5b600160a060020a03841615156119b457600080fd5b600160a060020a0385166000908152600360205260409020546119dd908463ffffffff61193316565b600160a060020a038087166000908152600360205260408082209390935590861681522054611a12908463ffffffff611b5716565b600160a060020a03808616600081815260036020908152604091829020949094558051878152905191939289169260008051602061262b83398151915292918290030190a3600160a060020a0385163314611b3957611a7185336118ab565b90506000198114611adb57611a8c818463ffffffff61193316565b600160a060020a03861660008181526005602090815260408083203380855290835292819020859055805194855251919360008051602061264b833981519152929081900390910190a3611b39565b600160a060020a0385166000908152600a602090815260408083203384529091529020541580611b2e5750600160a060020a0385166000908152600a602090815260408083203384529091529020544211155b1515611b3957600080fd5b611b4485858561231e565b506001949350505050565b6000903b1190565b818101828110156110ac57fe5b60006115e58383612355565b600083600160a060020a031663a4c0ed3660e060020a028685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611be8578181015183820152602001611bd0565b50505050905090810190601f168015611c155780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b83811015611ca3578181015183820152602001611c8b565b50505050905090810190601f168015611cd05780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b600160a060020a038216600090815260036020526040902054811115611d1257600080fd5b600160a060020a038216600090815260036020526040902054611d3b908263ffffffff61193316565b600160a060020a038316600090815260036020526040902055600454611d67908263ffffffff61193316565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a0385169160008051602061262b8339815191529181900360200190a35050565b80600160a060020a0381161515611df257600080fd5b600160a060020a0383161515611e1057611e0b82612424565b611703565b6117038383612430565b6000600854826040518082805190602001908083835b60208310611e4f5780518252601f199092019160209182019101611e30565b51815160209384036101000a6000190180199092169116179052604080519290940182900382207f190100000000000000000000000000000000000000000000000000000000000083830152602283019790975260428083019790975283518083039097018752606290910192839052855192945084935085019190508083835b60208310611eef5780518252601f199092019160209182019101611ed0565b5181516020939093036101000a6000190180199091169216919091179052604051920182900390912095945050505050565b6000808460ff16601b1480611f3957508460ff16601c145b1515611fb5576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115612053576040805160e560020a62461bcd02815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60448201527f7565000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60408051600080825260208083018085528a905260ff8916838501526060830188905260808301879052925160019360a0808501949193601f19840193928390039091019190865af11580156120ad573d6000803e3d6000fd5b5050604051601f190151915050600160a060020a038116151561211a576040805160e560020a62461bcd02815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b95945050505050565b600160a060020a03831615156121a8576040805160e560020a62461bcd028152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038216151561222e576040805160e560020a62461bcd02815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a038084166000818152600560209081526040808320948716808452948252918290208590558151858152915160008051602061264b8339815191529281900390910190a3505050565b600061228a8383611b64565b151561229557600080fd5b610b9133848461231e565b600160a060020a03811615156122b557600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b61232782611078565b156117035760408051600081526020810190915261234a90849084908490611b70565b151561170357600080fd5b3360009081526003602052604081205482111561237157600080fd5b600160a060020a038316151561238657600080fd5b336000908152600360205260409020546123a6908363ffffffff61193316565b3360009081526003602052604080822092909255600160a060020a038516815220546123d8908363ffffffff611b5716565b600160a060020a03841660008181526003602090815260409182902093909355805185815290519192339260008051602061262b8339815191529281900390910190a350600192915050565b303161104282826124dd565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561249557600080fd5b505af11580156124a9573d6000803e3d6000fd5b505050506040513d60208110156124bf57600080fd5b50519050611713600160a060020a038516848363ffffffff61254516565b604051600160a060020a0383169082156108fc029083906000818181858888f1935050505015156110425780826125126125da565b600160a060020a039091168152604051908190036020019082f08015801561253e573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b1580156125a857600080fd5b505af11580156125bc573d6000803e3d6000fd5b505050503d156117035760206000803e600051151561170357600080fd5b6040516021806125ea833901905600608060405260405160208060218339810160405251600160a060020a038116ff00bd0a91c9f9d084bad1a56f4df6c4c08bf6a3c9ff457e1c2f0ccbc02ffda9d3b1ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a723058200ee980fa646bfc8abd98737ca8f3bed33e34a2ba9dca20d7368c146312caef7c0029",
  "sourceMap": "65:3376:11:-;;;436:35:8;;;-1:-1:-1;;;;;;436:35:8;;;211:228:11;5:2:-1;;;;30:1;27;20:12;5:2;211:228:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:5;;211:228:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:5;;:4;;:12;;;;:::i;:::-;-1:-1:-1;481:16:5;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:5;:20;;;;;;-1:-1:-1;;503:20:5;;;;;;;;;-1:-1:-1;;567:5:2;:18;;-1:-1:-1;;;;;;567:18:2;575:10;567:18;;;-1:-1:-1;;;1050:13:14;;;1042:22;;;;;;1144:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1273:5;1257:23;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1257:23:14;;;;;;;;;;;;1314:7;;;;;274:1:-1;1314:7:14;;;;;;;;;;1298:25;;1257:23;;-1:-1:-1;1257:23:14;;-1:-1:-1;1298:25:14;;;;-1:-1:-1;274:1;1298:25:14;1314:7;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1298:25:14;;;;;;;;;;;;1116:278;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1116:278:14;;;;;;1375:4;1116:278;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1116:278:14;;;;;;;;1093:311;;1116:278;;;;-1:-1:-1;1093:311:14;;;-1:-1:-1;1093:311:14;1116:278;1093:311;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;1093:311:14;;;;;;;;;;;1074:16;:330;-1:-1:-1;;;;;;;729:22:12;;;:14;:22;;;;:31;;-1:-1:-1;;;;;;729:31:12;;;;;;-1:-1:-1;65:3376:11;;-1:-1:-1;;;;;;;;;;;;;65:3376:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;65:3376:11;;;-1:-1:-1;65:3376:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "65:3376:11:-;;;;;;;;;-1:-1:-1;;;65:3376:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:609:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1834:609:12;-1:-1:-1;;;;;1834:609:12;;;;;;;436:35:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:8;;;;;;;;;;;;;;;;;;;;;;319:18:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3499:165:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3499:165:14;-1:-1:-1;;;;;3499:165:14;;;;;;;886:70:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;886:70:12;-1:-1:-1;;;;;886:70:12;;;;;389:83:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:3;;;;;;;;;;;;;;;;;;;;3202:236:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3202:236:11;-1:-1:-1;;;;;3202:236:11;;;;;;;;;;;;994:204;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;994:204:11;-1:-1:-1;;;;;994:204:11;;;;;634:108:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;634:108:14;;;;365:21:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:5;;;;;;;;;;;;;;;;;;;;;;;179:31:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;179:31:14;;;;3889:215;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3889:215:14;-1:-1:-1;;;;;3889:215:14;;;;;;;1425:365:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1425:365:10;;;;-1:-1:-1;;;;;1425:365:10;;;;;;;;;;;;;;;;854:312:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;854:312:8;-1:-1:-1;;;;;854:312:8;;;;;;;353:73:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:4;;;;;376:49:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;376:49:12;-1:-1:-1;;;;;376:49:12;;;;;;;;;-1:-1:-1;;;;;376:49:12;;;;;;;;;;;;;;113:36:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;113:36:14;;;;134:34:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:34:11;;;;3679:432:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:9;-1:-1:-1;;;;;3679:432:9;;;;;;;4178:110:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4178:110:10;-1:-1:-1;;;;;4178:110:10;;;;;;;;;;1149:99:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:3;-1:-1:-1;;;;;1149:99:3;;;;;3872:71:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3872:71:10;;;;3267:147:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3267:147:12;-1:-1:-1;;;;;3267:147:12;;;;;3794:72:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3794:72:10;;;;749:41:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;749:41:14;-1:-1:-1;;;;;749:41:14;;;;;1796:135:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1796:135:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:2;;;;6089:656:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6089:656:14;-1:-1:-1;;;;;6089:656:14;;;;;;;;;;;;;;;;;;;;;;;;;;2245:388:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2245:388:11;;;;;341:20:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:5;;;;1246:460:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1246:460:12;-1:-1:-1;;;;;1246:460:12;;;;;2572:484;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2572:484:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2572:484:12;;;;;;;;;;;;;;;;;1724:235:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1724:235:11;-1:-1:-1;;;;;1724:235:11;;;;;4453:163:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4453:163:10;-1:-1:-1;;;;;4453:163:10;;;;;;;2990:206:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2990:206:11;-1:-1:-1;;;;;2990:206:11;;;;;;;2639:345;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2639:345:11;-1:-1:-1;;;;;2639:345:11;;;;;;;4252:106:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4252:106:14;-1:-1:-1;;;;;4252:106:14;;;;;;;4890:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4890:116:14;-1:-1:-1;;;;;4890:116:14;;;;;;;;;;;;367:115;;8:9:-1;5:2;;;30:1;27;20:12;5:2;367:115:14;;;;247:75:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;247:75:12;;;;1042:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1042:83:12;;;;7686:509:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;7686:509:14;-1:-1:-1;;;;;7686:509:14;;;;;;;;;;;;;;;;;;;;;;2926:296:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:9;-1:-1:-1;;;;;2926:296:9;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:9;-1:-1:-1;;;;;2321:153:9;;;;;;;;;;174:30:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;174:30:11;;;;4580:110:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4580:110:14;-1:-1:-1;;;;;4580:110:14;;;;;;;1274:103:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:2;-1:-1:-1;;;;;1274:103:2;;;;;431:26:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;431:26:12;;;;796:66:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;796:66:14;-1:-1:-1;;;;;796:66:14;;;;;;;;;;1834:609:12;719:5:2;;1939:18:12;;;;;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1910:17:12;1919:7;1910:8;:17::i;:::-;1902:26;;;;;;;;-1:-1:-1;;;;;;;;1960:23:12;;;;;;;:14;:23;;;;;;2040:21;;;;-1:-1:-1;;;;;;;;;;;2040:21:12;1960:23;;;;;2040:21;;2079:18;;;2071:27;;;;;;-1:-1:-1;;;;;2116:15:12;;;;;;;2109:163;;-1:-1:-1;;;;;2180:21:12;;;;;;;:14;:21;;;;;;2155:4;;-1:-1:-1;2180:21:12;;;;2224:14;;;;;:36;;-1:-1:-1;;;;;;2242:18:12;;;;2224:36;2216:45;;;;;;;;2109:163;;;-1:-1:-1;;;;;2282:21:12;;;;;;;:14;:21;;;;;;:34;;;;;-1:-1:-1;;2282:34:12;;;;;;;2333:23;;;;;;;2326:30;;;;;;;2380:11;;:18;;2282:34;2380:18;:15;:18;:::i;:::-;2366:11;:32;2414:22;;-1:-1:-1;;;;;2414:22:12;;;;;;;;1834:609;;;;:::o;436:35:8:-;;;;;;;;;:::o;319:18:5:-;;;;;;;;;;;;;;;-1:-1:-1;;319:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3499:165:14:-;3561:11;3584:52;3612:10;3624:3;3629:6;3584:27;:52::i;:::-;-1:-1:-1;3653:4:14;3499:165;;;;:::o;389:83:3:-;455:12;;389:83;:::o;3202:236:11:-;3315:19;;3284:4;;-1:-1:-1;;;;;3308:26:11;;;3315:19;;3308:26;;3300:35;;;;;;3360:15;;-1:-1:-1;;;;;3353:22:11;;;3360:15;;3353:22;;3345:31;;;;;;3393:38;3412:5;3419:3;3424:6;3393:18;:38::i;:::-;3386:45;3202:236;-1:-1:-1;;;;3202:236:11:o;994:204::-;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1093:45:11;1117:20;1093:23;:45::i;:::-;1085:54;;;;;;;;1149:19;:42;;-1:-1:-1;;1149:42:11;-1:-1:-1;;;;;1149:42:11;;;;;;;;;;994:204::o;634:108:14:-;676:66;634:108;:::o;365:21:5:-;;;;;;:::o;179:31:14:-;;;;:::o;3889:215::-;4017:10;3966:11;4034:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4034:24:14;;;;;;;;;;3966:11;;3989:87;;4029:3;;4034:41;;4063:11;4034:41;:28;:41;:::i;:::-;3989:27;:87::i;1425:365:10:-;1530:4;1516:3;-1:-1:-1;;;;;1312:24:10;;;;;;:55;;-1:-1:-1;;;;;;1340:27:10;;1362:4;1340:27;;1312:55;1304:64;;;;;;;;1554:26;1568:3;1573:6;1554:13;:26::i;:::-;1546:35;;;;;;;;1617:3;-1:-1:-1;;;;;1596:40:10;1605:10;-1:-1:-1;;;;;1596:40:10;;1622:6;1630:5;;1596:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1596:40:10;;-1:-1:-1;;;;;1596:40:10;1651:28;1675:3;1651:23;:28::i;:::-;1647:116;;;1703:48;1720:10;1732:3;1737:6;1745:5;;1703:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:16:10;;-1:-1:-1;;;;;1703:48:10:i;:::-;1695:57;;;;;;;;-1:-1:-1;1779:4:10;;1425:365;-1:-1:-1;;;;;1425:365:10:o;854:312:8:-;600:5;;968:4;;-1:-1:-1;;;;;600:5:8;586:10;:19;578:28;;;;;;511:15;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:25;:16;:25;:::i;:::-;982:12;:40;-1:-1:-1;;;;;1044:13:8;;;;;;:8;:13;;;;;;:26;;1062:7;1044:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1028:13:8;;;;;;:8;:13;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;-1:-1:-1;;;;;1110:34:8;;;1127:1;;-1:-1:-1;;;;;;;;;;;1110:34:8;;;;;;;;-1:-1:-1;1157:4:8;854:312;;;;:::o;353:73:4:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;376:49:12:-;;;;;;;;;;;;-1:-1:-1;;;;;376:49:12;;:::o;113:36:14:-;;;;;;;;;;;;;;;;;;;:::o;134:34:11:-;;;-1:-1:-1;;;;;134:34:11;;:::o;3679:432:9:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:9;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:9;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:9;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:9;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;-1:-1:-1;;;;;;;;;;;4028:61:9;;;;;;;;;;-1:-1:-1;4102:4:9;;3679:432;-1:-1:-1;;;3679:432:9:o;4178:110:10:-;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;4257:24:10;4269:6;4277:3;4257:11;:24::i;:::-;4178:110;;:::o;1149:99:3:-;-1:-1:-1;;;;;1227:16:3;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;3872:71:10:-;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;3267:147:12;3324:4;-1:-1:-1;;;;;3347:18:12;;;;;;;:60;;-1:-1:-1;;;;;;3369:24:12;;;3405:1;3369:24;;;:14;:24;;;;;;;:38;;3347:60;3340:67;3267:147;-1:-1:-1;;3267:147:12:o;3794:72:10:-;3835:4;3851:8;;;749:41:14;;;;;;;;;;;;;:::o;1796:135:10:-;1916:1;1919;1856:12;1796:135;;;:::o;238:20:2:-;;;-1:-1:-1;;;;;238:20:2;;:::o;6089:656:14:-;6361:14;;6319:12;;;:30;;;6342:7;6335:3;:14;;6319:30;6311:39;;;;;;;;6386:80;;;416:66;6386:80;;;;-1:-1:-1;;;;;6386:80:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;6386:80:14;;;;;;;6378:89;;:7;:89::i;:::-;6361:106;;6497:28;6506:6;6514:2;6518;6522;6497:8;:28::i;:::-;-1:-1:-1;;;;;6486:39:14;;;;;;6478:48;;;;;;-1:-1:-1;;;;;6554:15:14;;;;;;:6;:15;;;;;:17;;;;;;;;6544:27;;6536:36;;;;;;6600:8;:26;;6625:1;6600:26;;;-1:-1:-1;;6600:26:14;6583:43;;6670:8;:22;;6691:1;6670:22;;;6681:7;6670:22;-1:-1:-1;;;;;6637:20:14;;;;;;;:11;:20;;;;;;;;:30;;;;;;;;;:55;6703:35;6649:7;6658:8;6731:6;6703:8;:35::i;:::-;6089:656;;;;;;;;;;:::o;2245:388:11:-;2032:19;;2414:10;;-1:-1:-1;;;;;2032:19:11;2018:10;:33;2010:42;;;;;;2329:12;;2325:25;;;2343:7;;2325:25;-1:-1:-1;2427:19:11;;2471:12;;-1:-1:-1;;;;;2427:19:11;;;;2471:25;;2488:7;2471:25;:16;:25;:::i;:::-;2456:12;:40;-1:-1:-1;;;;;2521:12:11;;;;;;:8;:12;;;;;;:25;;2538:7;2521:25;:16;:25;:::i;:::-;-1:-1:-1;;;;;2506:12:11;;;;;;:8;:12;;;;;;;;;:40;;;;2561:17;;;;;;;2506:12;;2561:17;;;;;;;;;2593:33;;;;;;;;-1:-1:-1;;;;;2593:33:11;;;2610:1;;-1:-1:-1;;;;;;;;;;;2593:33:11;;;;;;;;2245:388;;:::o;341:20:5:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1246:460:12;719:5:2;;1444:19:12;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1319:11:12;;368:2;-1:-1:-1;1311:34:12;;;;;;1363:32;1387:7;1363:23;:32::i;:::-;1355:41;;;;;;;;1415:17;1424:7;1415:8;:17::i;:::-;1414:18;1406:27;;;;;;-1:-1:-1;;;;;;1466:22:12;;;;:14;:22;;-1:-1:-1;;;;;;;;;;;1466:22:12;;1506:25;;;1498:34;;;;;;1542:14;:22;;-1:-1:-1;;;;;;;;;;;1542:32:12;;-1:-1:-1;;1542:32:12;;;-1:-1:-1;;;;;1542:32:12;;;;;;;;;-1:-1:-1;1584:23:12;;;1542:22;1584:23;;:37;;;;;;;;;;;;;;1645:11;;:18;;-1:-1:-1;1645:15:12;:18::i;:::-;1631:11;:32;1679:20;;-1:-1:-1;;;;;1679:20:12;;;;;;;;1246:460;;:::o;2572:484::-;2617:9;2638:21;2698:15;2727:18;2676:11;;2662:26;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2662:26:12;-1:-1:-1;;;;;;2716:1:12;2748:22;;;:14;:22;;-1:-1:-1;;;;;;;;;;;2748:22:12;2638:50;;-1:-1:-1;2716:1:12;-1:-1:-1;2748:22:12;;-1:-1:-1;2788:24:12;;;2780:33;;;;;;-1:-1:-1;;;;;2831:20:12;;;;2824:204;;2883:10;2867:4;2872:7;2867:13;;;;;;;;;;-1:-1:-1;;;;;2867:26:12;;;:13;;;;;;;;;:26;;;;2920;;;;;;;:14;:26;;;;;;;;;2960:9;;;;;2920:26;2992:24;;;2984:33;;;;;;2824:204;;;-1:-1:-1;3045:4:12;;2572:484;-1:-1:-1;;2572:484:12:o;1724:235:11:-;719:5:2;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1815:41:11;1839:16;1815:23;:41::i;:::-;1807:50;;;;;;;;1875:27;1885:16;1875:9;:27::i;:::-;:32;1867:41;;;;;;1918:15;:34;;-1:-1:-1;;1918:34:11;-1:-1:-1;;;;;1918:34:11;;;;;;;;;;1724:235::o;4453:163:10:-;4538:4;4561:48;4584:7;4593:15;4561:22;:48::i;:::-;4554:55;4453:163;-1:-1:-1;;;4453:163:10:o;2990:206:11:-;3084:19;;3053:4;;-1:-1:-1;;;;;3077:26:11;;;3084:19;;3077:26;;3069:35;;;;;;3129:15;;-1:-1:-1;;;;;3122:22:11;;;3129:15;;3122:22;;3114:31;;;;;;3162:27;3177:3;3182:6;3162:14;:27::i;2639:345::-;2172:15;;-1:-1:-1;;;;;2172:15:11;2158:10;:29;2150:38;;;;;;-1:-1:-1;;;;;2813:17:11;;;;;;:8;:17;;;;;;:30;;2835:7;2813:30;:21;:30;:::i;:::-;-1:-1:-1;;;;;2793:17:11;;;;;;;:8;:17;;;;;;:50;;;;2890:15;;;;;2881:25;;;;:38;;2911:7;2881:38;:29;:38;:::i;:::-;2862:15;;;-1:-1:-1;;;;;2862:15:11;;;2853:25;;;;:8;:25;;;;;;;;;:66;;;;2952:15;;2934:43;;;;;;;2952:15;;;;2934:43;;;;-1:-1:-1;;;;;;;;;;;2934:43:11;;;;;;;;2639:345;;:::o;4252:106:14:-;4313:38;4326:10;4338:3;4343:7;4313:12;:38::i;:::-;;4252:106;;:::o;4890:116::-;4966:33;4979:5;4986:3;4991:7;4966:12;:33::i;:::-;;4890:116;;;:::o;367:115::-;416:66;367:115;:::o;247:75:12:-;-1:-1:-1;;;;;247:75:12;:::o;7686:509:14:-;7923:13;;7895:3;:16;-1:-1:-1;7895:16:14;7887:25;;;;;;-1:-1:-1;;;;;7939:15:14;;;;;;;:6;:15;;;;;;;;;:17;;;;;;;;7991:72;;676:66;7991:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;7991:72:14;;;;;;7939:17;-1:-1:-1;7983:81:14;;:7;:81::i;:::-;7966:98;;8094:28;8103:6;8111:2;8115;8119;8094:8;:28::i;:::-;-1:-1:-1;;;;;8083:39:14;;;;;;8075:48;;;;;;8134:54;8162:7;8171:8;8181:6;8134:27;:54::i;:::-;7686:509;;;;;;;;;:::o;2926:296:9:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:9;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:9;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;-1:-1:-1;;;;;;;;;;;3139:61:9;;;;;;;;;;-1:-1:-1;3213:4:9;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:9;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;174:30:11:-;;;-1:-1:-1;;;;;174:30:11;;:::o;4580:110:14:-;4643:40;4656:5;4663:10;4675:7;4643:12;:40::i;1274:103:2:-;719:5;;-1:-1:-1;;;;;719:5:2;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;431:26:12:-;;;;:::o;796:66:14:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;1060:116:1:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:1;;;1060:116::o;8508:372:14:-;8615:35;8624:6;8632:8;8642:7;8615:8;:35::i;:::-;-1:-1:-1;;8789:7:14;:22;8785:89;;;-1:-1:-1;;;;;8834:19:14;;;;;;;:11;:19;;;;;;;;:29;;;;;;;;;;;8827:36;8508:372;;;:::o;1925:1348::-;2017:4;;-1:-1:-1;;;;;2041:21:14;;;;2033:30;;;;;;-1:-1:-1;;;;;2081:24:14;;;;2073:33;;;;;;-1:-1:-1;;;;;2137:17:14;;;;;;:8;:17;;;;;;:30;;2159:7;2137:30;:21;:30;:::i;:::-;-1:-1:-1;;;;;2117:17:14;;;;;;;:8;:17;;;;;;:50;;;;2200:20;;;;;;;:33;;2225:7;2200:33;:24;:33;:::i;:::-;-1:-1:-1;;;;;2177:20:14;;;;;;;:8;:20;;;;;;;;;:56;;;;2248:38;;;;;;;2177:20;;2248:38;;;;-1:-1:-1;;;;;;;;;;;2248:38:14;;;;;;;;-1:-1:-1;;;;;2301:21:14;;2312:10;2301:21;2297:891;;2362:30;2372:7;2381:10;2362:9;:30::i;:::-;2338:54;-1:-1:-1;;;2411:28:14;;2407:652;;2615:26;:13;2633:7;2615:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;2584:16:14;;;;;;:7;:16;;;;;;;;2601:10;2584:28;;;;;;;;;;:57;;;2664:59;;;;;;2601:10;;-1:-1:-1;;;;;;;;;;;2664:59:14;;;;;;;;;;2407:652;;;-1:-1:-1;;;;;2963:20:14;;;;;;:11;:20;;;;;;;;2984:10;2963:32;;;;;;;;:37;;:80;;-1:-1:-1;;;;;;3004:20:14;;;;;;:11;:20;;;;;;;;3025:10;3004:32;;;;;;;;3040:3;-1:-1:-1;3004:39:14;2963:80;2955:89;;;;;;;;3198:47;3216:7;3225:10;3237:7;3198:17;:47::i;:::-;-1:-1:-1;3262:4:14;;1925:1348;-1:-1:-1;;;;1925:1348:14:o;438:578:0:-;496:4;971:18;;1003:8;;438:578::o;1238:128:1:-;1319:7;;;1339;;;;1332:15;;;1937:127:10;2007:4;2030:27;2045:3;2050:6;2030:14;:27::i;3585:203::-;3685:4;3708:3;-1:-1:-1;;;;;3708:8:10;677:10;-1:-1:-1;;;3740:17:10;3759:5;3766:6;3774:5;3717:63;;;;;;-1:-1:-1;;;;;3717:63:10;-1:-1:-1;;;;;3717:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3717:63:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3717:63:10;;;-1:-1:-1;;26:21;;;22:32;6:49;;3717:63:10;;;49:4:-1;25:18;;61:17;;3717:63:10;182:15:-1;3717:63:10;;;;179:29:-1;;;;160:49;;3708:73:10;;;3717:63;;3708:73;;-1:-1:-1;3708:73:10;;-1:-1:-1;25:18;-1:-1;3708:73:10;-1:-1:-1;3708:73:10;;-1:-1:-1;3708:73:10;25:18:-1;-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3708:73:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3585:203;-1:-1:-1;;;;;;;3585:203:10:o;430:438:4:-;-1:-1:-1;;;;;508:14:4;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:4;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:4;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:4;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:4;;;-1:-1:-1;;;;;;;;;;;829:34:4;;;;;;;;430:438;;:::o;892:225:90:-;964:3;-1:-1:-1;;;;;455:17:90;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:90;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;9604:182:14:-;9671:7;9736:16;;9764:12;9754:23;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;9754:23:14;;;;;;;;;;;;9707:71;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;9707:71:14;;;;;;;;9697:82;;9707:71;;-1:-1:-1;9707:71:14;;-1:-1:-1;9697:82:14;;;;-1:-1:-1;9697:82:14;9707:71;9697:82;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;;;;365:33;;9697:82:14;;;;;;;;;;;;-1:-1:-1;;;;;9604:182:14:o;10156:506::-;10248:7;10517:14;10275:2;:8;;10281:2;10275:8;:20;;;;10287:2;:8;;10293:2;10287:8;10275:20;10267:67;;;;;;;-1:-1:-1;;;;;10267:67:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10380:66;10365:81;;;10344:162;;;;;-1:-1:-1;;;;;10344:162:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10534:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10534:30:14;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;10534:30:14;;-1:-1:-1;;10534:30:14;;;-1:-1:-1;;;;;;;10582:20:14;;;;10574:57;;;;;-1:-1:-1;;;;;10574:57:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;10649:6;10156:506;-1:-1:-1;;;;;10156:506:14:o;9124:339::-;-1:-1:-1;;;;;9220:20:14;;;;9212:69;;;;;-1:-1:-1;;;;;9212:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9299:22:14;;;;9291:69;;;;;-1:-1:-1;;;;;9291:69:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9371:15:14;;;;;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;:35;;;9421;;;;;;;-1:-1:-1;;;;;;;;;;;9421:35:14;;;;;;;;;9124:339;;;:::o;2070:194:10:-;2133:4;2157:26;2171:3;2176:6;2157:13;:26::i;:::-;2149:35;;;;;;;;2194:42;2212:10;2224:3;2229:6;2194:17;:42::i;1512:171:2:-;-1:-1:-1;;;;;1582:23:2;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:2;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;1661:17:2;-1:-1:-1;;;;;1661:17:2;;;;;;;;;;1512:171::o;2971:199:10:-;3065:13;3074:3;3065:8;:13::i;:::-;3061:103;;;3139:12;;;3149:1;3139:12;;;;;;;;3102:50;;3119:5;;3126:3;;3131:6;;3102:16;:50::i;:::-;3094:59;;;;;;;626:321:3;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:3;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:3;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:3;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;-1:-1:-1;;;;;;;;;;;892:33:3;;;;;;;;;-1:-1:-1;938:4:3;626:321;;;;:::o;1270:145:90:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:90;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:90;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:90;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:90;;-1:-1:-1;1826:33:90;-1:-1:-1;;;;;1826:19:90;;1846:3;1795:21;1826:33;:19;:33;:::i;431:177:45:-;513:22;;-1:-1:-1;;;;;513:14:45;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:45;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;431:177:45;;:::o;579:339:49:-;677:6;-1:-1:-1;;;;;665:28:49;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:49;;;;;;;-1:-1:-1;;;;;665:41:49;-1:-1:-1;;;;;665:41:49;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:49;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:49;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;65:3376:11;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"./ERC677MultiBridgeToken.sol\";\n\ncontract ERC677BridgeTokenRewardable is ERC677MultiBridgeToken {\n    address public blockRewardContract;\n    address public stakingContract;\n\n    constructor(string _name, string _symbol, uint8 _decimals, uint256 _chainId)\n        public\n        ERC677MultiBridgeToken(_name, _symbol, _decimals, _chainId)\n    {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Updates the address of the used block reward contract.\n     * Only the token owner can call this method. \n     * Even though this function is inteded only for the initialization purpose,\n     * it is still possible to change the already used block reward contract.\n     * In this case users of the old contract won't lose their accumulated rewards,\n     * they can proceed with the withdrawal by calling the old block reward contract directly.\n     * @param _blockRewardContract address of the new block reward contract.\n     */\n    function setBlockRewardContract(address _blockRewardContract) external onlyOwner {\n        require(AddressUtils.isContract(_blockRewardContract));\n        blockRewardContract = _blockRewardContract;\n    }\n\n    /**\n     * @dev Updates the address of the used staking contract.\n     * Only the token owner can call this method. \n     * Even though this function is inteded only for the initialization purpose,\n     * it is still possible to change the already used staking contract.\n     * In this case users of the old staking contract won't lose their tokens,\n     * they can proceed with the withdrawal by calling the old staking contract directly.\n     * @param _stakingContract address of the new staking contract.\n     */\n    function setStakingContract(address _stakingContract) external onlyOwner {\n        require(AddressUtils.isContract(_stakingContract));\n        require(balanceOf(_stakingContract) == 0);\n        stakingContract = _stakingContract;\n    }\n\n    modifier onlyBlockRewardContract() {\n        require(msg.sender == blockRewardContract);\n        /* solcov ignore next */\n        _;\n    }\n\n    modifier onlyStakingContract() {\n        require(msg.sender == stakingContract);\n        /* solcov ignore next */\n        _;\n    }\n\n    function mintReward(uint256 _amount) external onlyBlockRewardContract {\n        if (_amount == 0) return;\n        // Mint `_amount` for the BlockReward contract\n        address to = blockRewardContract;\n        totalSupply_ = totalSupply_.add(_amount);\n        balances[to] = balances[to].add(_amount);\n        emit Mint(to, _amount);\n        emit Transfer(address(0), to, _amount);\n    }\n\n    function stake(address _staker, uint256 _amount) external onlyStakingContract {\n        // Transfer `_amount` from `_staker` to `stakingContract`\n        balances[_staker] = balances[_staker].sub(_amount);\n        balances[stakingContract] = balances[stakingContract].add(_amount);\n        emit Transfer(_staker, stakingContract, _amount);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != blockRewardContract);\n        require(_to != stakingContract);\n        return super.transfer(_to, _value);\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != blockRewardContract);\n        require(_to != stakingContract);\n        return super.transferFrom(_from, _to, _value);\n    }\n\n}\n",
  "sourcePath": "/Users/eabz/Documents/GitHub/tokenbridge/packages/poanetwork/contracts/ERC677BridgeTokenRewardable.sol",
  "ast": {
    "absolutePath": "project:/contracts/ERC677BridgeTokenRewardable.sol",
    "exportedSymbols": {
      "ERC677BridgeTokenRewardable": [
        1417
      ]
    },
    "id": 1418,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1178,
        "literals": [
          "solidity",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "absolutePath": "project:/contracts/ERC677MultiBridgeToken.sol",
        "file": "./ERC677MultiBridgeToken.sol",
        "id": 1179,
        "nodeType": "ImportDirective",
        "scope": 1418,
        "sourceUnit": 1723,
        "src": "25:38:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1180,
              "name": "ERC677MultiBridgeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1722,
              "src": "105:22:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC677MultiBridgeToken_$1722",
                "typeString": "contract ERC677MultiBridgeToken"
              }
            },
            "id": 1181,
            "nodeType": "InheritanceSpecifier",
            "src": "105:22:11"
          }
        ],
        "contractDependencies": [
          198,
          294,
          365,
          399,
          442,
          474,
          580,
          827,
          1176,
          1722,
          2377,
          4473,
          4702,
          11290
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1417,
        "linearizedBaseContracts": [
          1417,
          1722,
          2377,
          1176,
          11290,
          580,
          198,
          827,
          365,
          294,
          399,
          4702,
          4473,
          442,
          474
        ],
        "name": "ERC677BridgeTokenRewardable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1183,
            "name": "blockRewardContract",
            "nodeType": "VariableDeclaration",
            "scope": 1417,
            "src": "134:34:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1182,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "134:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1185,
            "name": "stakingContract",
            "nodeType": "VariableDeclaration",
            "scope": 1417,
            "src": "174:30:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1184,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "174:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1202,
              "nodeType": "Block",
              "src": "375:64:11",
              "statements": []
            },
            "documentation": null,
            "id": 1203,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1196,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1187,
                    "src": "334:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1197,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1189,
                    "src": "341:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1198,
                    "name": "_decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1191,
                    "src": "350:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 1199,
                    "name": "_chainId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
                    "src": "361:8:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1200,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1195,
                  "name": "ERC677MultiBridgeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1722,
                  "src": "311:22:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC677MultiBridgeToken_$1722_$",
                    "typeString": "type(contract ERC677MultiBridgeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "311:59:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1187,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1203,
                  "src": "223:12:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "223:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1203,
                  "src": "237:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1188,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:6:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1191,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1203,
                  "src": "253:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "name": "_chainId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1203,
                  "src": "270:16:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "270:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "222:65:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "375:0:11"
            },
            "scope": 1417,
            "src": "211:228:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1221,
              "nodeType": "Block",
              "src": "1075:123:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1213,
                            "name": "_blockRewardContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1205,
                            "src": "1117:20:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1211,
                            "name": "AddressUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1093:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AddressUtils_$18_$",
                              "typeString": "type(library AddressUtils)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "1093:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1093:45:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "1085:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1085:54:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1216,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:54:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1217,
                      "name": "blockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1183,
                      "src": "1149:19:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1218,
                      "name": "_blockRewardContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1205,
                      "src": "1171:20:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1149:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1220,
                  "nodeType": "ExpressionStatement",
                  "src": "1149:42:11"
                }
              ]
            },
            "documentation": "@dev Updates the address of the used block reward contract.\nOnly the token owner can call this method. \nEven though this function is inteded only for the initialization purpose,\nit is still possible to change the already used block reward contract.\nIn this case users of the old contract won't lose their accumulated rewards,\nthey can proceed with the withdrawal by calling the old block reward contract directly.\n@param _blockRewardContract address of the new block reward contract.",
            "id": 1222,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1208,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1207,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 146,
                  "src": "1065:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1065:9:11"
              }
            ],
            "name": "setBlockRewardContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1205,
                  "name": "_blockRewardContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1222,
                  "src": "1026:28:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1204,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1026:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1025:30:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1075:0:11"
            },
            "scope": 1417,
            "src": "994:204:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "1797:162:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1232,
                            "name": "_stakingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "1839:16:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 1230,
                            "name": "AddressUtils",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "1815:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AddressUtils_$18_$",
                              "typeString": "type(library AddressUtils)"
                            }
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isContract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17,
                          "src": "1815:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1815:41:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1229,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "1807:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:50:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:50:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1238,
                              "name": "_stakingContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1224,
                              "src": "1885:16:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1237,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              293
                            ],
                            "referencedDeclaration": 293,
                            "src": "1875:9:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1906:1:11",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1875:32:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "1867:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:41:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1243,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:41:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1244,
                      "name": "stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "1918:15:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1245,
                      "name": "_stakingContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1224,
                      "src": "1936:16:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1918:34:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:34:11"
                }
              ]
            },
            "documentation": "@dev Updates the address of the used staking contract.\nOnly the token owner can call this method. \nEven though this function is inteded only for the initialization purpose,\nit is still possible to change the already used staking contract.\nIn this case users of the old staking contract won't lose their tokens,\nthey can proceed with the withdrawal by calling the old staking contract directly.\n@param _stakingContract address of the new staking contract.",
            "id": 1249,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1227,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1226,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 146,
                  "src": "1787:9:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1787:9:11"
              }
            ],
            "name": "setStakingContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1224,
                  "name": "_stakingContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 1249,
                  "src": "1752:24:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1223,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1751:26:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:11"
            },
            "scope": 1417,
            "src": "1724:235:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1259,
              "nodeType": "Block",
              "src": "2000:103:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1252,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19337,
                            "src": "2018:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2018:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1254,
                          "name": "blockRewardContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "2032:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2018:33:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1251,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "2010:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2010:42:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1257,
                  "nodeType": "ExpressionStatement",
                  "src": "2010:42:11"
                },
                {
                  "id": 1258,
                  "nodeType": "PlaceholderStatement",
                  "src": "2095:1:11"
                }
              ]
            },
            "documentation": null,
            "id": 1260,
            "name": "onlyBlockRewardContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1997:2:11"
            },
            "src": "1965:138:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1270,
              "nodeType": "Block",
              "src": "2140:99:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 1263,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19337,
                            "src": "2158:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2158:10:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1265,
                          "name": "stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "2172:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2158:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "2150:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2150:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "2150:38:11"
                },
                {
                  "id": 1269,
                  "nodeType": "PlaceholderStatement",
                  "src": "2231:1:11"
                }
              ]
            },
            "documentation": null,
            "id": 1271,
            "name": "onlyStakingContract",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:2:11"
            },
            "src": "2109:130:11",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1318,
              "nodeType": "Block",
              "src": "2315:318:11",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1278,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1273,
                      "src": "2329:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 1279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2340:1:11",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2329:12:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 1282,
                  "nodeType": "IfStatement",
                  "src": "2325:25:11",
                  "trueBody": {
                    "expression": null,
                    "functionReturnParameters": 1277,
                    "id": 1281,
                    "nodeType": "Return",
                    "src": "2343:7:11"
                  }
                },
                {
                  "assignments": [
                    1284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1284,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "2414:10:11",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1283,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2414:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "initialValue": {
                    "argumentTypes": null,
                    "id": 1285,
                    "name": "blockRewardContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1183,
                    "src": "2427:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2414:32:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1287,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "2456:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1290,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1273,
                          "src": "2488:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 1288,
                          "name": "totalSupply_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "2471:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "2471:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1291,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2471:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2456:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1293,
                  "nodeType": "ExpressionStatement",
                  "src": "2456:40:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1294,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2506:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1296,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1295,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "2515:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2506:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1301,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1273,
                          "src": "2538:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1297,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2521:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1299,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1298,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1284,
                            "src": "2530:2:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2521:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "2521:16:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2521:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2506:40:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "2506:40:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1306,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "2566:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1307,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "2570:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1305,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "2561:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2561:17:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1309,
                  "nodeType": "EmitStatement",
                  "src": "2556:22:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 1312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2610:1:11",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2602:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2602:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1314,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1284,
                        "src": "2614:2:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1315,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1273,
                        "src": "2618:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1310,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4443,
                        473
                      ],
                      "referencedDeclaration": 473,
                      "src": "2593:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:33:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1317,
                  "nodeType": "EmitStatement",
                  "src": "2588:38:11"
                }
              ]
            },
            "documentation": null,
            "id": 1319,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1276,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1275,
                  "name": "onlyBlockRewardContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1260,
                  "src": "2291:23:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2291:23:11"
              }
            ],
            "name": "mintReward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1273,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1319,
                  "src": "2265:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1272,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2265:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2264:17:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2315:0:11"
            },
            "scope": 1417,
            "src": "2245:388:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1356,
              "nodeType": "Block",
              "src": "2717:267:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1328,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2793:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1330,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1329,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "2802:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2793:17:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1335,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "2835:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1331,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2813:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1333,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1332,
                            "name": "_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1321,
                            "src": "2822:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2813:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 87,
                        "src": "2813:21:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2813:30:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2793:50:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1338,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:50:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1339,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2853:8:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1341,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1340,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "2862:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2853:25:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1346,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1323,
                          "src": "2911:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1342,
                            "name": "balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2881:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1344,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1343,
                            "name": "stakingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "2890:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2881:25:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 111,
                        "src": "2881:29:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 1347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2881:38:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2853:66:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1349,
                  "nodeType": "ExpressionStatement",
                  "src": "2853:66:11"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1351,
                        "name": "_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1321,
                        "src": "2943:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1352,
                        "name": "stakingContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1185,
                        "src": "2952:15:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1353,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1323,
                        "src": "2969:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1350,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4443,
                        473
                      ],
                      "referencedDeclaration": 473,
                      "src": "2934:8:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2934:43:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1355,
                  "nodeType": "EmitStatement",
                  "src": "2929:48:11"
                }
              ]
            },
            "documentation": null,
            "id": 1357,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 1326,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1325,
                  "name": "onlyStakingContract",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1271,
                  "src": "2697:19:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2697:19:11"
              }
            ],
            "name": "stake",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1324,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1321,
                  "name": "_staker",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "2654:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1320,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2654:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1323,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1357,
                  "src": "2671:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1322,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2671:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2653:34:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2717:0:11"
            },
            "scope": 1417,
            "src": "2639:345:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1384,
              "nodeType": "Block",
              "src": "3059:137:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1367,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1359,
                          "src": "3077:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1368,
                          "name": "blockRewardContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "3084:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3077:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "3069:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3069:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1371,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:35:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1373,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1359,
                          "src": "3122:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1374,
                          "name": "stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "3129:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3122:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "3114:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3114:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1377,
                  "nodeType": "ExpressionStatement",
                  "src": "3114:31:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1380,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1359,
                        "src": "3177:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1381,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1361,
                        "src": "3182:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1378,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19391,
                        "src": "3162:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC677BridgeTokenRewardable_$1417",
                          "typeString": "contract super ERC677BridgeTokenRewardable"
                        }
                      },
                      "id": 1379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1017,
                      "src": "3162:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 1382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3162:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1365,
                  "id": 1383,
                  "nodeType": "Return",
                  "src": "3155:34:11"
                }
              ]
            },
            "documentation": null,
            "id": 1385,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1362,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1359,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "3008:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3008:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1361,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "3021:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3021:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3007:29:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1364,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1385,
                  "src": "3053:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1363,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3053:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3052:6:11"
            },
            "scope": 1417,
            "src": "2990:206:11",
            "stateMutability": "nonpayable",
            "superFunction": 1017,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1415,
              "nodeType": "Block",
              "src": "3290:148:11",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1397,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "3308:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1398,
                          "name": "blockRewardContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "3315:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3308:26:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "3300:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3300:35:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1401,
                  "nodeType": "ExpressionStatement",
                  "src": "3300:35:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1403,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1389,
                          "src": "3353:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 1404,
                          "name": "stakingContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "3360:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3353:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1402,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19340,
                        19341
                      ],
                      "referencedDeclaration": 19340,
                      "src": "3345:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3345:31:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1407,
                  "nodeType": "ExpressionStatement",
                  "src": "3345:31:11"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1410,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1387,
                        "src": "3412:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1411,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1389,
                        "src": "3419:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1412,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "3424:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1408,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19391,
                        "src": "3393:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC677BridgeTokenRewardable_$1417",
                          "typeString": "contract super ERC677BridgeTokenRewardable"
                        }
                      },
                      "id": 1409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1985,
                      "src": "3393:18:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) returns (bool)"
                      }
                    },
                    "id": 1413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:38:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1395,
                  "id": 1414,
                  "nodeType": "Return",
                  "src": "3386:45:11"
                }
              ]
            },
            "documentation": null,
            "id": 1416,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1387,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "3224:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3224:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1389,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "3239:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3239:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1391,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "3252:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3252:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3223:44:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1394,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1416,
                  "src": "3284:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1393,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3284:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3283:6:11"
            },
            "scope": 1417,
            "src": "3202:236:11",
            "stateMutability": "nonpayable",
            "superFunction": 1985,
            "visibility": "public"
          }
        ],
        "scope": 1418,
        "src": "65:3376:11"
      }
    ],
    "src": "0:3442:11"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ERC677BridgeTokenRewardable.sol",
      "exportedSymbols": {
        "ERC677BridgeTokenRewardable": [
          1417
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.4",
            ".24"
          ]
        },
        "id": 1178,
        "name": "PragmaDirective",
        "src": "0:23:11"
      },
      {
        "attributes": {
          "SourceUnit": 1723,
          "absolutePath": "project:/contracts/ERC677MultiBridgeToken.sol",
          "file": "./ERC677MultiBridgeToken.sol",
          "scope": 1418,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1179,
        "name": "ImportDirective",
        "src": "25:38:11"
      },
      {
        "attributes": {
          "contractDependencies": [
            198,
            294,
            365,
            399,
            442,
            474,
            580,
            827,
            1176,
            1722,
            2377,
            4473,
            4702,
            11290
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1417,
            1722,
            2377,
            1176,
            11290,
            580,
            198,
            827,
            365,
            294,
            399,
            4702,
            4473,
            442,
            474
          ],
          "name": "ERC677BridgeTokenRewardable",
          "scope": 1418
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC677MultiBridgeToken",
                  "referencedDeclaration": 1722,
                  "type": "contract ERC677MultiBridgeToken"
                },
                "id": 1180,
                "name": "UserDefinedTypeName",
                "src": "105:22:11"
              }
            ],
            "id": 1181,
            "name": "InheritanceSpecifier",
            "src": "105:22:11"
          },
          {
            "attributes": {
              "constant": false,
              "name": "blockRewardContract",
              "scope": 1417,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "type": "address"
                },
                "id": 1182,
                "name": "ElementaryTypeName",
                "src": "134:7:11"
              }
            ],
            "id": 1183,
            "name": "VariableDeclaration",
            "src": "134:34:11"
          },
          {
            "attributes": {
              "constant": false,
              "name": "stakingContract",
              "scope": 1417,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "type": "address"
                },
                "id": 1184,
                "name": "ElementaryTypeName",
                "src": "174:7:11"
              }
            ],
            "id": 1185,
            "name": "VariableDeclaration",
            "src": "174:30:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "name": "",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_name",
                      "scope": 1203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1186,
                        "name": "ElementaryTypeName",
                        "src": "223:6:11"
                      }
                    ],
                    "id": 1187,
                    "name": "VariableDeclaration",
                    "src": "223:12:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_symbol",
                      "scope": 1203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 1188,
                        "name": "ElementaryTypeName",
                        "src": "237:6:11"
                      }
                    ],
                    "id": 1189,
                    "name": "VariableDeclaration",
                    "src": "237:14:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_decimals",
                      "scope": 1203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint8",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint8",
                          "type": "uint8"
                        },
                        "id": 1190,
                        "name": "ElementaryTypeName",
                        "src": "253:5:11"
                      }
                    ],
                    "id": 1191,
                    "name": "VariableDeclaration",
                    "src": "253:15:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_chainId",
                      "scope": 1203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1192,
                        "name": "ElementaryTypeName",
                        "src": "270:7:11"
                      }
                    ],
                    "id": 1193,
                    "name": "VariableDeclaration",
                    "src": "270:16:11"
                  }
                ],
                "id": 1194,
                "name": "ParameterList",
                "src": "222:65:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1201,
                "name": "ParameterList",
                "src": "375:0:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1722,
                      "type": "type(contract ERC677MultiBridgeToken)",
                      "value": "ERC677MultiBridgeToken"
                    },
                    "id": 1195,
                    "name": "Identifier",
                    "src": "311:22:11"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1187,
                      "type": "string memory",
                      "value": "_name"
                    },
                    "id": 1196,
                    "name": "Identifier",
                    "src": "334:5:11"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1189,
                      "type": "string memory",
                      "value": "_symbol"
                    },
                    "id": 1197,
                    "name": "Identifier",
                    "src": "341:7:11"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1191,
                      "type": "uint8",
                      "value": "_decimals"
                    },
                    "id": 1198,
                    "name": "Identifier",
                    "src": "350:9:11"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1193,
                      "type": "uint256",
                      "value": "_chainId"
                    },
                    "id": 1199,
                    "name": "Identifier",
                    "src": "361:8:11"
                  }
                ],
                "id": 1200,
                "name": "ModifierInvocation",
                "src": "311:59:11"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1202,
                "name": "Block",
                "src": "375:64:11"
              }
            ],
            "id": 1203,
            "name": "FunctionDefinition",
            "src": "211:228:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Updates the address of the used block reward contract.\nOnly the token owner can call this method. \nEven though this function is inteded only for the initialization purpose,\nit is still possible to change the already used block reward contract.\nIn this case users of the old contract won't lose their accumulated rewards,\nthey can proceed with the withdrawal by calling the old block reward contract directly.\n@param _blockRewardContract address of the new block reward contract.",
              "implemented": true,
              "isConstructor": false,
              "name": "setBlockRewardContract",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_blockRewardContract",
                      "scope": 1222,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1204,
                        "name": "ElementaryTypeName",
                        "src": "1026:7:11"
                      }
                    ],
                    "id": 1205,
                    "name": "VariableDeclaration",
                    "src": "1026:28:11"
                  }
                ],
                "id": 1206,
                "name": "ParameterList",
                "src": "1025:30:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1209,
                "name": "ParameterList",
                "src": "1075:0:11"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 146,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1207,
                    "name": "Identifier",
                    "src": "1065:9:11"
                  }
                ],
                "id": 1208,
                "name": "ModifierInvocation",
                "src": "1065:9:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1210,
                            "name": "Identifier",
                            "src": "1085:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isContract",
                                  "referencedDeclaration": 17,
                                  "type": "function (address) view returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 18,
                                      "type": "type(library AddressUtils)",
                                      "value": "AddressUtils"
                                    },
                                    "id": 1211,
                                    "name": "Identifier",
                                    "src": "1093:12:11"
                                  }
                                ],
                                "id": 1212,
                                "name": "MemberAccess",
                                "src": "1093:23:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1205,
                                  "type": "address",
                                  "value": "_blockRewardContract"
                                },
                                "id": 1213,
                                "name": "Identifier",
                                "src": "1117:20:11"
                              }
                            ],
                            "id": 1214,
                            "name": "FunctionCall",
                            "src": "1093:45:11"
                          }
                        ],
                        "id": 1215,
                        "name": "FunctionCall",
                        "src": "1085:54:11"
                      }
                    ],
                    "id": 1216,
                    "name": "ExpressionStatement",
                    "src": "1085:54:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1183,
                              "type": "address",
                              "value": "blockRewardContract"
                            },
                            "id": 1217,
                            "name": "Identifier",
                            "src": "1149:19:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1205,
                              "type": "address",
                              "value": "_blockRewardContract"
                            },
                            "id": 1218,
                            "name": "Identifier",
                            "src": "1171:20:11"
                          }
                        ],
                        "id": 1219,
                        "name": "Assignment",
                        "src": "1149:42:11"
                      }
                    ],
                    "id": 1220,
                    "name": "ExpressionStatement",
                    "src": "1149:42:11"
                  }
                ],
                "id": 1221,
                "name": "Block",
                "src": "1075:123:11"
              }
            ],
            "id": 1222,
            "name": "FunctionDefinition",
            "src": "994:204:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": "@dev Updates the address of the used staking contract.\nOnly the token owner can call this method. \nEven though this function is inteded only for the initialization purpose,\nit is still possible to change the already used staking contract.\nIn this case users of the old staking contract won't lose their tokens,\nthey can proceed with the withdrawal by calling the old staking contract directly.\n@param _stakingContract address of the new staking contract.",
              "implemented": true,
              "isConstructor": false,
              "name": "setStakingContract",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_stakingContract",
                      "scope": 1249,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1223,
                        "name": "ElementaryTypeName",
                        "src": "1752:7:11"
                      }
                    ],
                    "id": 1224,
                    "name": "VariableDeclaration",
                    "src": "1752:24:11"
                  }
                ],
                "id": 1225,
                "name": "ParameterList",
                "src": "1751:26:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1228,
                "name": "ParameterList",
                "src": "1797:0:11"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 146,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 1226,
                    "name": "Identifier",
                    "src": "1787:9:11"
                  }
                ],
                "id": 1227,
                "name": "ModifierInvocation",
                "src": "1787:9:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1229,
                            "name": "Identifier",
                            "src": "1807:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "isContract",
                                  "referencedDeclaration": 17,
                                  "type": "function (address) view returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 18,
                                      "type": "type(library AddressUtils)",
                                      "value": "AddressUtils"
                                    },
                                    "id": 1230,
                                    "name": "Identifier",
                                    "src": "1815:12:11"
                                  }
                                ],
                                "id": 1231,
                                "name": "MemberAccess",
                                "src": "1815:23:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1224,
                                  "type": "address",
                                  "value": "_stakingContract"
                                },
                                "id": 1232,
                                "name": "Identifier",
                                "src": "1839:16:11"
                              }
                            ],
                            "id": 1233,
                            "name": "FunctionCall",
                            "src": "1815:41:11"
                          }
                        ],
                        "id": 1234,
                        "name": "FunctionCall",
                        "src": "1807:50:11"
                      }
                    ],
                    "id": 1235,
                    "name": "ExpressionStatement",
                    "src": "1807:50:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1236,
                            "name": "Identifier",
                            "src": "1867:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        293
                                      ],
                                      "referencedDeclaration": 293,
                                      "type": "function (address) view returns (uint256)",
                                      "value": "balanceOf"
                                    },
                                    "id": 1237,
                                    "name": "Identifier",
                                    "src": "1875:9:11"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 1224,
                                      "type": "address",
                                      "value": "_stakingContract"
                                    },
                                    "id": 1238,
                                    "name": "Identifier",
                                    "src": "1885:16:11"
                                  }
                                ],
                                "id": 1239,
                                "name": "FunctionCall",
                                "src": "1875:27:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1240,
                                "name": "Literal",
                                "src": "1906:1:11"
                              }
                            ],
                            "id": 1241,
                            "name": "BinaryOperation",
                            "src": "1875:32:11"
                          }
                        ],
                        "id": 1242,
                        "name": "FunctionCall",
                        "src": "1867:41:11"
                      }
                    ],
                    "id": 1243,
                    "name": "ExpressionStatement",
                    "src": "1867:41:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1185,
                              "type": "address",
                              "value": "stakingContract"
                            },
                            "id": 1244,
                            "name": "Identifier",
                            "src": "1918:15:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1224,
                              "type": "address",
                              "value": "_stakingContract"
                            },
                            "id": 1245,
                            "name": "Identifier",
                            "src": "1936:16:11"
                          }
                        ],
                        "id": 1246,
                        "name": "Assignment",
                        "src": "1918:34:11"
                      }
                    ],
                    "id": 1247,
                    "name": "ExpressionStatement",
                    "src": "1918:34:11"
                  }
                ],
                "id": 1248,
                "name": "Block",
                "src": "1797:162:11"
              }
            ],
            "id": 1249,
            "name": "FunctionDefinition",
            "src": "1724:235:11"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyBlockRewardContract",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1250,
                "name": "ParameterList",
                "src": "1997:2:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1251,
                            "name": "Identifier",
                            "src": "2010:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 19337,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1252,
                                    "name": "Identifier",
                                    "src": "2018:3:11"
                                  }
                                ],
                                "id": 1253,
                                "name": "MemberAccess",
                                "src": "2018:10:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1183,
                                  "type": "address",
                                  "value": "blockRewardContract"
                                },
                                "id": 1254,
                                "name": "Identifier",
                                "src": "2032:19:11"
                              }
                            ],
                            "id": 1255,
                            "name": "BinaryOperation",
                            "src": "2018:33:11"
                          }
                        ],
                        "id": 1256,
                        "name": "FunctionCall",
                        "src": "2010:42:11"
                      }
                    ],
                    "id": 1257,
                    "name": "ExpressionStatement",
                    "src": "2010:42:11"
                  },
                  {
                    "id": 1258,
                    "name": "PlaceholderStatement",
                    "src": "2095:1:11"
                  }
                ],
                "id": 1259,
                "name": "Block",
                "src": "2000:103:11"
              }
            ],
            "id": 1260,
            "name": "ModifierDefinition",
            "src": "1965:138:11"
          },
          {
            "attributes": {
              "documentation": null,
              "name": "onlyStakingContract",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1261,
                "name": "ParameterList",
                "src": "2137:2:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1262,
                            "name": "Identifier",
                            "src": "2150:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 19337,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 1263,
                                    "name": "Identifier",
                                    "src": "2158:3:11"
                                  }
                                ],
                                "id": 1264,
                                "name": "MemberAccess",
                                "src": "2158:10:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1185,
                                  "type": "address",
                                  "value": "stakingContract"
                                },
                                "id": 1265,
                                "name": "Identifier",
                                "src": "2172:15:11"
                              }
                            ],
                            "id": 1266,
                            "name": "BinaryOperation",
                            "src": "2158:29:11"
                          }
                        ],
                        "id": 1267,
                        "name": "FunctionCall",
                        "src": "2150:38:11"
                      }
                    ],
                    "id": 1268,
                    "name": "ExpressionStatement",
                    "src": "2150:38:11"
                  },
                  {
                    "id": 1269,
                    "name": "PlaceholderStatement",
                    "src": "2231:1:11"
                  }
                ],
                "id": 1270,
                "name": "Block",
                "src": "2140:99:11"
              }
            ],
            "id": 1271,
            "name": "ModifierDefinition",
            "src": "2109:130:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "name": "mintReward",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_amount",
                      "scope": 1319,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1272,
                        "name": "ElementaryTypeName",
                        "src": "2265:7:11"
                      }
                    ],
                    "id": 1273,
                    "name": "VariableDeclaration",
                    "src": "2265:15:11"
                  }
                ],
                "id": 1274,
                "name": "ParameterList",
                "src": "2264:17:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1277,
                "name": "ParameterList",
                "src": "2315:0:11"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1260,
                      "type": "modifier ()",
                      "value": "onlyBlockRewardContract"
                    },
                    "id": 1275,
                    "name": "Identifier",
                    "src": "2291:23:11"
                  }
                ],
                "id": 1276,
                "name": "ModifierInvocation",
                "src": "2291:23:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1273,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 1278,
                            "name": "Identifier",
                            "src": "2329:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 1279,
                            "name": "Literal",
                            "src": "2340:1:11"
                          }
                        ],
                        "id": 1280,
                        "name": "BinaryOperation",
                        "src": "2329:12:11"
                      },
                      {
                        "attributes": {
                          "expression": null,
                          "functionReturnParameters": 1277
                        },
                        "id": 1281,
                        "name": "Return",
                        "src": "2343:7:11"
                      }
                    ],
                    "id": 1282,
                    "name": "IfStatement",
                    "src": "2325:25:11"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        1284
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "to",
                          "scope": 1319,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "type": "address"
                            },
                            "id": 1283,
                            "name": "ElementaryTypeName",
                            "src": "2414:7:11"
                          }
                        ],
                        "id": 1284,
                        "name": "VariableDeclaration",
                        "src": "2414:10:11"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 1183,
                          "type": "address",
                          "value": "blockRewardContract"
                        },
                        "id": 1285,
                        "name": "Identifier",
                        "src": "2427:19:11"
                      }
                    ],
                    "id": 1286,
                    "name": "VariableDeclarationStatement",
                    "src": "2414:32:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 213,
                              "type": "uint256",
                              "value": "totalSupply_"
                            },
                            "id": 1287,
                            "name": "Identifier",
                            "src": "2456:12:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 111,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 213,
                                      "type": "uint256",
                                      "value": "totalSupply_"
                                    },
                                    "id": 1288,
                                    "name": "Identifier",
                                    "src": "2471:12:11"
                                  }
                                ],
                                "id": 1289,
                                "name": "MemberAccess",
                                "src": "2471:16:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1273,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 1290,
                                "name": "Identifier",
                                "src": "2488:7:11"
                              }
                            ],
                            "id": 1291,
                            "name": "FunctionCall",
                            "src": "2471:25:11"
                          }
                        ],
                        "id": 1292,
                        "name": "Assignment",
                        "src": "2456:40:11"
                      }
                    ],
                    "id": 1293,
                    "name": "ExpressionStatement",
                    "src": "2456:40:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 211,
                                  "type": "mapping(address => uint256)",
                                  "value": "balances"
                                },
                                "id": 1294,
                                "name": "Identifier",
                                "src": "2506:8:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1284,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 1295,
                                "name": "Identifier",
                                "src": "2515:2:11"
                              }
                            ],
                            "id": 1296,
                            "name": "IndexAccess",
                            "src": "2506:12:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 111,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 211,
                                          "type": "mapping(address => uint256)",
                                          "value": "balances"
                                        },
                                        "id": 1297,
                                        "name": "Identifier",
                                        "src": "2521:8:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1284,
                                          "type": "address",
                                          "value": "to"
                                        },
                                        "id": 1298,
                                        "name": "Identifier",
                                        "src": "2530:2:11"
                                      }
                                    ],
                                    "id": 1299,
                                    "name": "IndexAccess",
                                    "src": "2521:12:11"
                                  }
                                ],
                                "id": 1300,
                                "name": "MemberAccess",
                                "src": "2521:16:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1273,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 1301,
                                "name": "Identifier",
                                "src": "2538:7:11"
                              }
                            ],
                            "id": 1302,
                            "name": "FunctionCall",
                            "src": "2521:25:11"
                          }
                        ],
                        "id": 1303,
                        "name": "Assignment",
                        "src": "2506:40:11"
                      }
                    ],
                    "id": 1304,
                    "name": "ExpressionStatement",
                    "src": "2506:40:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 488,
                              "type": "function (address,uint256)",
                              "value": "Mint"
                            },
                            "id": 1305,
                            "name": "Identifier",
                            "src": "2561:4:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1284,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1306,
                            "name": "Identifier",
                            "src": "2566:2:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1273,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 1307,
                            "name": "Identifier",
                            "src": "2570:7:11"
                          }
                        ],
                        "id": 1308,
                        "name": "FunctionCall",
                        "src": "2561:17:11"
                      }
                    ],
                    "id": 1309,
                    "name": "EmitStatement",
                    "src": "2556:22:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                4443,
                                473
                              ],
                              "referencedDeclaration": 473,
                              "type": "function (address,address,uint256)",
                              "value": "Transfer"
                            },
                            "id": 1310,
                            "name": "Identifier",
                            "src": "2593:8:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)",
                                  "value": "address"
                                },
                                "id": 1311,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2602:7:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 1312,
                                "name": "Literal",
                                "src": "2610:1:11"
                              }
                            ],
                            "id": 1313,
                            "name": "FunctionCall",
                            "src": "2602:10:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1284,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 1314,
                            "name": "Identifier",
                            "src": "2614:2:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1273,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 1315,
                            "name": "Identifier",
                            "src": "2618:7:11"
                          }
                        ],
                        "id": 1316,
                        "name": "FunctionCall",
                        "src": "2593:33:11"
                      }
                    ],
                    "id": 1317,
                    "name": "EmitStatement",
                    "src": "2588:38:11"
                  }
                ],
                "id": 1318,
                "name": "Block",
                "src": "2315:318:11"
              }
            ],
            "id": 1319,
            "name": "FunctionDefinition",
            "src": "2245:388:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "name": "stake",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_staker",
                      "scope": 1357,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1320,
                        "name": "ElementaryTypeName",
                        "src": "2654:7:11"
                      }
                    ],
                    "id": 1321,
                    "name": "VariableDeclaration",
                    "src": "2654:15:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_amount",
                      "scope": 1357,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1322,
                        "name": "ElementaryTypeName",
                        "src": "2671:7:11"
                      }
                    ],
                    "id": 1323,
                    "name": "VariableDeclaration",
                    "src": "2671:15:11"
                  }
                ],
                "id": 1324,
                "name": "ParameterList",
                "src": "2653:34:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1327,
                "name": "ParameterList",
                "src": "2717:0:11"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1271,
                      "type": "modifier ()",
                      "value": "onlyStakingContract"
                    },
                    "id": 1325,
                    "name": "Identifier",
                    "src": "2697:19:11"
                  }
                ],
                "id": 1326,
                "name": "ModifierInvocation",
                "src": "2697:19:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 211,
                                  "type": "mapping(address => uint256)",
                                  "value": "balances"
                                },
                                "id": 1328,
                                "name": "Identifier",
                                "src": "2793:8:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1321,
                                  "type": "address",
                                  "value": "_staker"
                                },
                                "id": 1329,
                                "name": "Identifier",
                                "src": "2802:7:11"
                              }
                            ],
                            "id": 1330,
                            "name": "IndexAccess",
                            "src": "2793:17:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 87,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 211,
                                          "type": "mapping(address => uint256)",
                                          "value": "balances"
                                        },
                                        "id": 1331,
                                        "name": "Identifier",
                                        "src": "2813:8:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1321,
                                          "type": "address",
                                          "value": "_staker"
                                        },
                                        "id": 1332,
                                        "name": "Identifier",
                                        "src": "2822:7:11"
                                      }
                                    ],
                                    "id": 1333,
                                    "name": "IndexAccess",
                                    "src": "2813:17:11"
                                  }
                                ],
                                "id": 1334,
                                "name": "MemberAccess",
                                "src": "2813:21:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1323,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 1335,
                                "name": "Identifier",
                                "src": "2835:7:11"
                              }
                            ],
                            "id": 1336,
                            "name": "FunctionCall",
                            "src": "2813:30:11"
                          }
                        ],
                        "id": 1337,
                        "name": "Assignment",
                        "src": "2793:50:11"
                      }
                    ],
                    "id": 1338,
                    "name": "ExpressionStatement",
                    "src": "2793:50:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 211,
                                  "type": "mapping(address => uint256)",
                                  "value": "balances"
                                },
                                "id": 1339,
                                "name": "Identifier",
                                "src": "2853:8:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1185,
                                  "type": "address",
                                  "value": "stakingContract"
                                },
                                "id": 1340,
                                "name": "Identifier",
                                "src": "2862:15:11"
                              }
                            ],
                            "id": 1341,
                            "name": "IndexAccess",
                            "src": "2853:25:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "add",
                                  "referencedDeclaration": 111,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 211,
                                          "type": "mapping(address => uint256)",
                                          "value": "balances"
                                        },
                                        "id": 1342,
                                        "name": "Identifier",
                                        "src": "2881:8:11"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1185,
                                          "type": "address",
                                          "value": "stakingContract"
                                        },
                                        "id": 1343,
                                        "name": "Identifier",
                                        "src": "2890:15:11"
                                      }
                                    ],
                                    "id": 1344,
                                    "name": "IndexAccess",
                                    "src": "2881:25:11"
                                  }
                                ],
                                "id": 1345,
                                "name": "MemberAccess",
                                "src": "2881:29:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1323,
                                  "type": "uint256",
                                  "value": "_amount"
                                },
                                "id": 1346,
                                "name": "Identifier",
                                "src": "2911:7:11"
                              }
                            ],
                            "id": 1347,
                            "name": "FunctionCall",
                            "src": "2881:38:11"
                          }
                        ],
                        "id": 1348,
                        "name": "Assignment",
                        "src": "2853:66:11"
                      }
                    ],
                    "id": 1349,
                    "name": "ExpressionStatement",
                    "src": "2853:66:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                4443,
                                473
                              ],
                              "referencedDeclaration": 473,
                              "type": "function (address,address,uint256)",
                              "value": "Transfer"
                            },
                            "id": 1350,
                            "name": "Identifier",
                            "src": "2934:8:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1321,
                              "type": "address",
                              "value": "_staker"
                            },
                            "id": 1351,
                            "name": "Identifier",
                            "src": "2943:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1185,
                              "type": "address",
                              "value": "stakingContract"
                            },
                            "id": 1352,
                            "name": "Identifier",
                            "src": "2952:15:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1323,
                              "type": "uint256",
                              "value": "_amount"
                            },
                            "id": 1353,
                            "name": "Identifier",
                            "src": "2969:7:11"
                          }
                        ],
                        "id": 1354,
                        "name": "FunctionCall",
                        "src": "2934:43:11"
                      }
                    ],
                    "id": 1355,
                    "name": "EmitStatement",
                    "src": "2929:48:11"
                  }
                ],
                "id": 1356,
                "name": "Block",
                "src": "2717:267:11"
              }
            ],
            "id": 1357,
            "name": "FunctionDefinition",
            "src": "2639:345:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "transfer",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": 1017,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 1385,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1358,
                        "name": "ElementaryTypeName",
                        "src": "3008:7:11"
                      }
                    ],
                    "id": 1359,
                    "name": "VariableDeclaration",
                    "src": "3008:11:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 1385,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1360,
                        "name": "ElementaryTypeName",
                        "src": "3021:7:11"
                      }
                    ],
                    "id": 1361,
                    "name": "VariableDeclaration",
                    "src": "3021:14:11"
                  }
                ],
                "id": 1362,
                "name": "ParameterList",
                "src": "3007:29:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1385,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1363,
                        "name": "ElementaryTypeName",
                        "src": "3053:4:11"
                      }
                    ],
                    "id": 1364,
                    "name": "VariableDeclaration",
                    "src": "3053:4:11"
                  }
                ],
                "id": 1365,
                "name": "ParameterList",
                "src": "3052:6:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1366,
                            "name": "Identifier",
                            "src": "3069:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1359,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 1367,
                                "name": "Identifier",
                                "src": "3077:3:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1183,
                                  "type": "address",
                                  "value": "blockRewardContract"
                                },
                                "id": 1368,
                                "name": "Identifier",
                                "src": "3084:19:11"
                              }
                            ],
                            "id": 1369,
                            "name": "BinaryOperation",
                            "src": "3077:26:11"
                          }
                        ],
                        "id": 1370,
                        "name": "FunctionCall",
                        "src": "3069:35:11"
                      }
                    ],
                    "id": 1371,
                    "name": "ExpressionStatement",
                    "src": "3069:35:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1372,
                            "name": "Identifier",
                            "src": "3114:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1359,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 1373,
                                "name": "Identifier",
                                "src": "3122:3:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1185,
                                  "type": "address",
                                  "value": "stakingContract"
                                },
                                "id": 1374,
                                "name": "Identifier",
                                "src": "3129:15:11"
                              }
                            ],
                            "id": 1375,
                            "name": "BinaryOperation",
                            "src": "3122:22:11"
                          }
                        ],
                        "id": 1376,
                        "name": "FunctionCall",
                        "src": "3114:31:11"
                      }
                    ],
                    "id": 1377,
                    "name": "ExpressionStatement",
                    "src": "3114:31:11"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1365
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "referencedDeclaration": 1017,
                              "type": "function (address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 19391,
                                  "type": "contract super ERC677BridgeTokenRewardable",
                                  "value": "super"
                                },
                                "id": 1378,
                                "name": "Identifier",
                                "src": "3162:5:11"
                              }
                            ],
                            "id": 1379,
                            "name": "MemberAccess",
                            "src": "3162:14:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1359,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 1380,
                            "name": "Identifier",
                            "src": "3177:3:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1361,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 1381,
                            "name": "Identifier",
                            "src": "3182:6:11"
                          }
                        ],
                        "id": 1382,
                        "name": "FunctionCall",
                        "src": "3162:27:11"
                      }
                    ],
                    "id": 1383,
                    "name": "Return",
                    "src": "3155:34:11"
                  }
                ],
                "id": 1384,
                "name": "Block",
                "src": "3059:137:11"
              }
            ],
            "id": 1385,
            "name": "FunctionDefinition",
            "src": "2990:206:11"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "transferFrom",
              "payable": false,
              "scope": 1417,
              "stateMutability": "nonpayable",
              "superFunction": 1985,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 1416,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1386,
                        "name": "ElementaryTypeName",
                        "src": "3224:7:11"
                      }
                    ],
                    "id": 1387,
                    "name": "VariableDeclaration",
                    "src": "3224:13:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_to",
                      "scope": 1416,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 1388,
                        "name": "ElementaryTypeName",
                        "src": "3239:7:11"
                      }
                    ],
                    "id": 1389,
                    "name": "VariableDeclaration",
                    "src": "3239:11:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_value",
                      "scope": 1416,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1390,
                        "name": "ElementaryTypeName",
                        "src": "3252:7:11"
                      }
                    ],
                    "id": 1391,
                    "name": "VariableDeclaration",
                    "src": "3252:14:11"
                  }
                ],
                "id": 1392,
                "name": "ParameterList",
                "src": "3223:44:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 1416,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 1393,
                        "name": "ElementaryTypeName",
                        "src": "3284:4:11"
                      }
                    ],
                    "id": 1394,
                    "name": "VariableDeclaration",
                    "src": "3284:4:11"
                  }
                ],
                "id": 1395,
                "name": "ParameterList",
                "src": "3283:6:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1396,
                            "name": "Identifier",
                            "src": "3300:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1389,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 1397,
                                "name": "Identifier",
                                "src": "3308:3:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1183,
                                  "type": "address",
                                  "value": "blockRewardContract"
                                },
                                "id": 1398,
                                "name": "Identifier",
                                "src": "3315:19:11"
                              }
                            ],
                            "id": 1399,
                            "name": "BinaryOperation",
                            "src": "3308:26:11"
                          }
                        ],
                        "id": 1400,
                        "name": "FunctionCall",
                        "src": "3300:35:11"
                      }
                    ],
                    "id": 1401,
                    "name": "ExpressionStatement",
                    "src": "3300:35:11"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                19340,
                                19341
                              ],
                              "referencedDeclaration": 19340,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 1402,
                            "name": "Identifier",
                            "src": "3345:7:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1389,
                                  "type": "address",
                                  "value": "_to"
                                },
                                "id": 1403,
                                "name": "Identifier",
                                "src": "3353:3:11"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1185,
                                  "type": "address",
                                  "value": "stakingContract"
                                },
                                "id": 1404,
                                "name": "Identifier",
                                "src": "3360:15:11"
                              }
                            ],
                            "id": 1405,
                            "name": "BinaryOperation",
                            "src": "3353:22:11"
                          }
                        ],
                        "id": 1406,
                        "name": "FunctionCall",
                        "src": "3345:31:11"
                      }
                    ],
                    "id": 1407,
                    "name": "ExpressionStatement",
                    "src": "3345:31:11"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 1395
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transferFrom",
                              "referencedDeclaration": 1985,
                              "type": "function (address,address,uint256) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 19391,
                                  "type": "contract super ERC677BridgeTokenRewardable",
                                  "value": "super"
                                },
                                "id": 1408,
                                "name": "Identifier",
                                "src": "3393:5:11"
                              }
                            ],
                            "id": 1409,
                            "name": "MemberAccess",
                            "src": "3393:18:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1387,
                              "type": "address",
                              "value": "_from"
                            },
                            "id": 1410,
                            "name": "Identifier",
                            "src": "3412:5:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1389,
                              "type": "address",
                              "value": "_to"
                            },
                            "id": 1411,
                            "name": "Identifier",
                            "src": "3419:3:11"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1391,
                              "type": "uint256",
                              "value": "_value"
                            },
                            "id": 1412,
                            "name": "Identifier",
                            "src": "3424:6:11"
                          }
                        ],
                        "id": 1413,
                        "name": "FunctionCall",
                        "src": "3393:38:11"
                      }
                    ],
                    "id": 1414,
                    "name": "Return",
                    "src": "3386:45:11"
                  }
                ],
                "id": 1415,
                "name": "Block",
                "src": "3290:148:11"
              }
            ],
            "id": 1416,
            "name": "FunctionDefinition",
            "src": "3202:236:11"
          }
        ],
        "id": 1417,
        "name": "ContractDefinition",
        "src": "65:3376:11"
      }
    ],
    "id": 1418,
    "name": "SourceUnit",
    "src": "0:3442:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-04T01:08:19.152Z",
  "devdoc": {
    "methods": {
      "addBridge(address)": {
        "details": "Adds one more bridge contract into the list",
        "params": {
          "_bridge": "bridge contract address"
        }
      },
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.",
        "params": {
          "_to": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "bridgeContract()": {
        "details": "Removes unused getter from ERC677BridgeToken contract"
      },
      "bridgeList()": {
        "details": "Returns all recorded bridge contract addresses",
        "return": "address[] bridge contract addresses"
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "_value": "The amount of token to be burned."
        }
      },
      "claimTokens(address,address)": {
        "details": "Withdraws the erc20 tokens or native coins from this contract.",
        "params": {
          "_to": "address of the tokens/coins receiver.",
          "_token": "address of the claimed token or address(0) for native coins."
        }
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to spender by the caller.",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_to": "The address which will spend the funds."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "isBridge(address)": {
        "details": "Checks if given address is included into bridge contracts list",
        "params": {
          "_address": "bridge contract address"
        },
        "return": "bool true, if given address is a known bridge contract "
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint.",
          "_to": "The address that will receive the minted tokens."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "move(address,address,uint256)": {
        "details": "An alias for `transferFrom` function.",
        "params": {
          "_amount": "The value to transfer.",
          "_from": "The address of the sender.",
          "_to": "The address of the recipient."
        }
      },
      "permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
        "details": "Allows to spend holder's unlimited amount by the specified spender. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.",
        "params": {
          "_allowed": "True to enable unlimited allowance for the spender by the holder. False to disable.",
          "_expiry": "The allowance expiration date (unix timestamp in UTC). Can be zero for no expiration. Forced to zero if `_allowed` is `false`. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.",
          "_holder": "The holder's address.",
          "_nonce": "The nonce taken from `nonces(_holder)` public getter.",
          "_r": "The first 32 bytes of signature (ECDSA component).",
          "_s": "The second 32 bytes of signature (ECDSA component).",
          "_spender": "The spender's address.",
          "_v": "A final byte of signature (ECDSA component)."
        }
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "Allows to spend holder's unlimited amount by the specified spender according to EIP2612. The function can be called by anyone, but requires having allowance parameters signed by the holder according to EIP712.",
        "params": {
          "_deadline": "The deadline timestamp to call the permit function. Must be a timestamp in the future. Note that timestamps are not precise, malicious miner/validator can manipulate them to some extend. Assume that there can be a 900 seconds time delta between the desired timestamp and the actual expiration.",
          "_holder": "The holder's address.",
          "_r": "The first 32 bytes of signature (ECDSA component).",
          "_s": "The second 32 bytes of signature (ECDSA component).",
          "_spender": "The spender's address.",
          "_v": "A final byte of signature (ECDSA component).",
          "_value": "Allowance value to set as a result of the call."
        }
      },
      "pull(address,uint256)": {
        "details": "Makes a request to transfer the specified amount from the specified address to the caller's address.",
        "params": {
          "_amount": "The value to transfer.",
          "_from": "The address of the holder."
        }
      },
      "push(address,uint256)": {
        "details": "An alias for `transfer` function.",
        "params": {
          "_amount": "The value to transfer.",
          "_to": "The address of the recipient."
        }
      },
      "removeBridge(address)": {
        "details": "Removes one existing bridge contract from the list",
        "params": {
          "_bridge": "bridge contract address"
        }
      },
      "setBlockRewardContract(address)": {
        "details": "Updates the address of the used block reward contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used block reward contract. In this case users of the old contract won't lose their accumulated rewards, they can proceed with the withdrawal by calling the old block reward contract directly.",
        "params": {
          "_blockRewardContract": "address of the new block reward contract."
        }
      },
      "setBridgeContract(address)": {
        "details": "Removes unused function from ERC677BridgeToken contract"
      },
      "setStakingContract(address)": {
        "details": "Updates the address of the used staking contract. Only the token owner can call this method.  Even though this function is inteded only for the initialization purpose, it is still possible to change the already used staking contract. In this case users of the old staking contract won't lose their tokens, they can proceed with the withdrawal by calling the old staking contract directly.",
        "params": {
          "_stakingContract": "address of the new staking contract."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}