{
  "contractName": "Bytes",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper methods to transform bytes to other solidity types.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Bytes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libraries/Bytes.sol\":\"Bytes\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/libraries/Bytes.sol\":{\"keccak256\":\"0x3ff1032b3d97ed3ef682588efc9fc713f84807c8843249093e15591c4e0f5d4d\",\"urls\":[\"bzz-raw://90d15a7f529fd39ab6256dbff43e08a6408213e495d87ecbfd7bc6e6442a1976\",\"dweb:/ipfs/QmeJbjNb8PdwGziJkfWbbu3VF9oRf4PXhWewUg6iqcoAGP\"]}},\"version\":1}",
  "bytecode": "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a4586c720e3c61aeba3c32d0ddbc06bf3a26390563d65b726e5c2077a2a32a3064736f6c63430007050033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a4586c720e3c61aeba3c32d0ddbc06bf3a26390563d65b726e5c2077a2a32a3064736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "115:764:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "115:764:23:-:0;;;;;;;;",
  "source": "pragma solidity 0.7.5;\n\n/**\n * @title Bytes\n * @dev Helper methods to transform bytes to other solidity types.\n */\nlibrary Bytes {\n    /**\n     * @dev Truncate bytes array if its size is more than 20 bytes.\n     * NOTE: This function does not perform any checks on the received parameter.\n     * Make sure that the _bytes argument has a correct length, not less than 20 bytes.\n     * A case when _bytes has length less than 20 will lead to the undefined behaviour,\n     * since assembly will read data from memory that is not related to the _bytes argument.\n     * @param _bytes to be converted to address type\n     * @return addr address included in the firsts 20 bytes of the bytes array in parameter.\n     */\n    function bytesToAddress(bytes memory _bytes) internal pure returns (address addr) {\n        assembly {\n            addr := mload(add(_bytes, 20))\n        }\n    }\n}\n",
  "sourcePath": "/Users/eabz/Documents/GitHub/tokenbridge/packages/omnibridge/contracts/libraries/Bytes.sol",
  "ast": {
    "absolutePath": "project:/contracts/libraries/Bytes.sol",
    "exportedSymbols": {
      "Bytes": [
        1388
      ]
    },
    "id": 1389,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1376,
        "literals": [
          "solidity",
          "0.7",
          ".5"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:23"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1377,
          "nodeType": "StructuredDocumentation",
          "src": "24:90:23",
          "text": " @title Bytes\n @dev Helper methods to transform bytes to other solidity types."
        },
        "fullyImplemented": true,
        "id": 1388,
        "linearizedBaseContracts": [
          1388
        ],
        "name": "Bytes",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1386,
              "nodeType": "Block",
              "src": "798:79:23",
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "817:54:23",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "831:30:23",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "849:6:23"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "857:2:23",
                                  "type": "",
                                  "value": "20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "845:3:23"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "845:15:23"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "839:5:23"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "839:22:23"
                        },
                        "variableNames": [
                          {
                            "name": "addr",
                            "nodeType": "YulIdentifier",
                            "src": "831:4:23"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1380,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "849:6:23",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1383,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "831:4:23",
                      "valueSize": 1
                    }
                  ],
                  "id": 1385,
                  "nodeType": "InlineAssembly",
                  "src": "808:63:23"
                }
              ]
            },
            "documentation": {
              "id": 1378,
              "nodeType": "StructuredDocumentation",
              "src": "135:576:23",
              "text": " @dev Truncate bytes array if its size is more than 20 bytes.\n NOTE: This function does not perform any checks on the received parameter.\n Make sure that the _bytes argument has a correct length, not less than 20 bytes.\n A case when _bytes has length less than 20 will lead to the undefined behaviour,\n since assembly will read data from memory that is not related to the _bytes argument.\n @param _bytes to be converted to address type\n @return addr address included in the firsts 20 bytes of the bytes array in parameter."
            },
            "id": 1387,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bytesToAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1380,
                  "mutability": "mutable",
                  "name": "_bytes",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "740:19:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1379,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:5:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "739:21:23"
            },
            "returnParameters": {
              "id": 1384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 1387,
                  "src": "784:12:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1382,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "783:14:23"
            },
            "scope": 1388,
            "src": "716:161:23",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1389,
        "src": "115:764:23"
      }
    ],
    "src": "0:880:23"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/libraries/Bytes.sol",
      "exportedSymbols": {
        "Bytes": [
          1388
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.7",
            ".5"
          ]
        },
        "id": 1376,
        "name": "PragmaDirective",
        "src": "0:22:23"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1388
          ],
          "name": "Bytes",
          "scope": 1389
        },
        "children": [
          {
            "attributes": {
              "text": " @title Bytes\n @dev Helper methods to transform bytes to other solidity types."
            },
            "id": 1377,
            "name": "StructuredDocumentation",
            "src": "24:90:23"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "bytesToAddress",
              "scope": 1388,
              "stateMutability": "pure",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Truncate bytes array if its size is more than 20 bytes.\n NOTE: This function does not perform any checks on the received parameter.\n Make sure that the _bytes argument has a correct length, not less than 20 bytes.\n A case when _bytes has length less than 20 will lead to the undefined behaviour,\n since assembly will read data from memory that is not related to the _bytes argument.\n @param _bytes to be converted to address type\n @return addr address included in the firsts 20 bytes of the bytes array in parameter."
                },
                "id": 1378,
                "name": "StructuredDocumentation",
                "src": "135:576:23"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_bytes",
                      "scope": 1387,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 1379,
                        "name": "ElementaryTypeName",
                        "src": "740:5:23"
                      }
                    ],
                    "id": 1380,
                    "name": "VariableDeclaration",
                    "src": "740:19:23"
                  }
                ],
                "id": 1381,
                "name": "ParameterList",
                "src": "739:21:23"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "addr",
                      "scope": 1387,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 1382,
                        "name": "ElementaryTypeName",
                        "src": "784:7:23"
                      }
                    ],
                    "id": 1383,
                    "name": "VariableDeclaration",
                    "src": "784:12:23"
                  }
                ],
                "id": 1384,
                "name": "ParameterList",
                "src": "783:14:23"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "evmVersion": "istanbul",
                      "externalReferences": [
                        {
                          "declaration": 1380,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "849:6:23",
                          "valueSize": 1
                        },
                        {
                          "declaration": 1383,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "831:4:23",
                          "valueSize": 1
                        }
                      ],
                      "operations": "{\n    addr := mload(add(_bytes, 20))\n}"
                    },
                    "children": [],
                    "id": 1385,
                    "name": "InlineAssembly",
                    "src": "808:63:23"
                  }
                ],
                "id": 1386,
                "name": "Block",
                "src": "798:79:23"
              }
            ],
            "id": 1387,
            "name": "FunctionDefinition",
            "src": "716:161:23"
          }
        ],
        "id": 1388,
        "name": "ContractDefinition",
        "src": "115:764:23"
      }
    ],
    "id": 1389,
    "name": "SourceUnit",
    "src": "0:880:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-04T01:08:31.147Z",
  "devdoc": {
    "details": "Helper methods to transform bytes to other solidity types.",
    "kind": "dev",
    "methods": {},
    "title": "Bytes",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}